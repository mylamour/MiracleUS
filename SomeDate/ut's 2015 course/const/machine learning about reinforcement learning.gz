%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: mlbook.dvi
%%Pages: 20
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o mlbook.ps mlbook
%DVIPSParameters: dpi=300, compressed, comments removed
%DVIPSSource:  TeX output 1997.12.02:1158
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/setpagedevice{pop}N statusdict begin /letter{}N /lettertray{}N /legal{}
N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N /b5tray{}N
/showpage{}N /erasepage{}N /copypage{}N end /letter{}N /lettertray{}N
/legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N /b4tray{}N /b5{}N
/b5tray{}N /showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N
/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4
copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip
newpath moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{
SDict begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /setpagedevice{pop}N statusdict begin /letter{}
N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{}N
/b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N end
/letter{}N /lettertray{}N /legal{}N /legaltray{}N /a4{}N /a4tray{}N /b4{
}N /b4tray{}N /b5{}N /b5tray{}N /showpage{}N /erasepage{}N /copypage{}N
newpath}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount
sub{end}repeat grestore SpecialSave restore end}N /@defspecial{SDict
begin}N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np
{/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (mlbook.dvi)
@start /Fa 2 49 df<13C0A538E0C1C0EAF0C33838C700EA0EDCEA03F0EA00C0EA03F0
EA0EDCEA38C738F0C3C0EAE0C13800C000A512157D9619>3 D<EA01C0EA03E0A3EA07C0
A31380120F1300A3121EA2121CA2123C1238A25AA21260A212E05A12400B1A7F9B0E>48
D E /Fb 3 89 df<EAFFF0A3EAE000B3B3B3B3B3B3AAEAFFF0A30C7C758118>34
D<EAFFF0A3EA0070B3B3B3B3B3B3AAEAFFF0A30C7C808118>I<B912C018E06CC81201EE
001F6C6CED03F06C6C1500000F17386D16186C6C160C6C6C1604A26C6C16026C6C160013
7FA26D7E6D7E130F806D7E6D7EA26D7E6D7E147E147F6E7E6E7EA2140F6E5A14034AC9FC
140E5C5C5CA25C495A495A49CAFC130EA24916024916045B49160C000117184916384848
16F848C9EA01F0000E160F48ED01FF003FB812E0A25AB912C0373A7E7F3C>88
D E /Fc 4 50 df<B712E0A323037B8F2E>0 D<1370A600E0133838F0207800F813F838
3E23E0380F27803803AE00EA00F8A2EA03AE380F2780383E23E038F820F800F0137838E0
703800001300A6151A7C9B1E>3 D<EA01E0EA03F0A4EA07E0A313C0120FA21380A3EA1F
00A3121E123E123CA312381278A21270A212F05AA20C1E7EA010>48
D<01FEEC03F82603FFC0EB0FFE4801F0EB3C03260E03F89038700080261800FE01C01340
4890267F018013200020D93F83C7FC48D91F861410EC0FCC00C0D907FC1408486D5A5D6E
7E6E7E157E15FE4A6C14180040DA9F8013109138030FC06C01066D13204A6C6C13606C49
6C6C13C06C903A7000FE0380260601E090387FFF002603FF80EB1FFEC648C7EA03F8351A
7D993C>I E /Fd 9 118 df<49B612FE49EDFFC06D82903B0007F8000FF80203EC03FC4A
48EB00FEA2187FA24A48EC3F80A3187F4A5AA44A48ECFF00A26017014AC75B4D5AA24D5A
02FEEC0FC0EF3F8005FFC7FCEE07FC49B612F0178002FCCAFCA2495AA4495AA4495AA449
5AA4495AA449CBFCA25B007F13FEB5FC7E393B7BBA3A>80 D<EC3F80903801FFF0903807
E07890380F801C90381E000E137C49133E0001147E484813FE5B000714FC4848137C1530
48481300123FA290C8FC5AA312FEA55AA31504007C140E151C007E143C003E1478001E14
E0001FEB03C06CEB0F803907C07E003801FFF838007F801F2777A528>99
D<EC3F80903801FFE0903807E07090381F803890383E001C5B5B485A1203485A485A1538
001F14784913F0003FEB03E0EC3F80397FFFFE0014E090C8FCA2127E12FEA5127EA21504
150E151C003E143C15786C14E06CEB03C03907800F803903C07E003801FFF838007F801F
2777A528>101 D<ED01E0ED07F8ED0E1CED1C0EED3C1EED783F167FEDF8FEA2EDF07C02
0113381600A25D1403A44A5AA5140F0103B512804914C016809039000F8000A24AC7FCA5
143EA55CA55CA5495AA5495AA413075CA4495AA391C8FC5B121CEA3E1E127EEAFE3E133C
12FCEAF838EA7070EA30E0EA1FC06C5A284F82BC1A>I<D803E013FE3A07F003FF803A0E
380F83C03A1C3C1C01E06D486C7E00385B5CD93FC07F00705BA291C7FC133ED8E07E495A
A2EA007CA249495AA34B5A485AA24B5AA2485A92381F01C0A3484890383E0380A392383C
0700485A16065E161C48C7EA1C38ED0FF0000EEC07C02A2779A530>110
D<EC3F80903801FFE0903807E0F890380F803C90383E001E49131F5B0001EC0F80485A49
14C01207485AA2485A123FA290C7121F5AA300FEEC3F80A316005D48147E15FE5D5D007C
13014A5A007E5C003E495A4A5A6C49C7FC6C137C3807C1F83801FFE06C6CC8FC222777A5
2C>I<3903E001F83907F00FFE3A0E381E0780381C3C3890391E700FC00038EBE01FEB1F
C0D93F80138012709138000E0092C7FC133EEAE07E137C1200A25BA4485AA4485AA4485A
A4485AA448C9FCA2120E222779A524>114 D<EB0380EB07C0A3EB0F80A4EB1F00A4133E
A45B007FB5FCB6FC14FE3800F800A4485AA4485AA4485AA4485AA448C7FC141CA2143812
3E1430147014E0A2EB01C0381E0380EB0700EA0E0EEA07FCEA01F0183778B51D>116
D<13F8486C1470D8070E14F8EA060F000CEC01F0001C138012181238ED03E038701F00A3
D8E03EEB07C0A2C65AA2ED0F805BA34848EB1F00A44848133E1607A3ED7C0EA315FC0201
131C12019138033C182600F00613389039783C1C7090393FF80FE090390FE007C0282779
A52E>I E /Fe 1 124 df<B9FCA33003809831>123 D E /Ff 8
62 df<130813101320134013C0EA0180A2EA03001206A2120E120C121CA212181238A212
301270A512F05AAD7E1270A512301238A21218121CA2120C120E1206A27EEA0180A2EA00
C013401320131013080D3D7AAC17>40 D<7E12407E7E12187EA27E7EA21380120113C0A2
120013E0A213601370A513781338AD13781370A5136013E0A213C01201A2138012031300
A212065AA25A12105A5A5A0D3D7DAC17>I<1438B3B712FEA3C70038C7FCB327297DA22E>
43 D<137F3801C1C0380780F0380F0078000E1338487F003C131EA3487FA400F81480AF
00781400A46C131EA3001C131C6C5B000F13786C6C5A3801C1C0D8007FC7FC19297EA71E
>48 D<1310137013F0120712FF12F81200B3AD487E387FFFE0A213287BA71E>I<13FE38
07FF80380E07E0381803F0382001F8130048137CA200F8137E7E143EA30078137EC7FC14
7CA214F8A2EB01F014E0EB03C0EB07801400130E5B5B5B13605B38018002EA0300000613
045A5A0010130C383FFFFC4813F8B5FCA217287DA71E>I<137F3803FFC0380701F0380C
00F80010137C121C003E137E143EA2121E000C137EC7127CA214785C5C495A0107C7FC13
FFEB01E06D7E147880143E80A21580A21230127812FCA215005A00405B143E00305B6C5B
380F01F03803FFC0C690C7FC19297EA71E>I<B712FEA27ECAFCA9007FB612FEB7FCA227
0F7D952E>61 D E /Fg 11 117 df<EA01E0EA00787F7FA2131F7FA280130780A2130380
A2130180A21300801478A2147CA214BCEB01BEEB031E1306EB0C1F497E013013801370EB
E007D801C013C0EA038038070003000E14E0121E007C1301007814F0481300006014781D
2A7DA923>21 D<0003B512F8000F14FC4814F8393810100012201240EAC0303880203012
00136014201340EBC060A21201EB8070A21203A2EA070014785AA2001E137C1478000C13
301E1A7D9922>25 D<127812FCA212FEA2127A1202A41204A31208A21210122012400712
7B8511>59 D<131FEB70C63801C02FEA03800007131EEA0F00121EA2003E5B123C127CA2
485BA4485B1540A3903801E080EA7003EA7804393808E100381C30733807C01C1A1A7E99
20>97 D<EB03E090380E18C090383805E013709038F003C0EA01E0EA03C0A20007EB0780
1380120FA2391F000F00A4001E131EA45C000E137C000F13BC3807013C38038678EA00F8
1300A25CA3495A127038F803C05CD8F00FC7FCEAE03CEA3FF01B267F991D>103
D<133CEA07FCA2EA007C1378A45BA4485AA43803C1F8EBC60EEBC80FEBF007EA07A001C0
13801380A2390F000F00A4001E131EA35C5A15101478A248EB702014F0EC704015804813
310060EB1E001C2A7DA922>I<131C133EA2133C13381300A9EA0780EA08E01210EA20F0
A21240A2EA41E012811201EA03C0A2EA0780A3EA0F00A21304121EA2EA1C08123CEA1C10
1320EA0C60EA07800F287EA715>I<000F137E39118183803921C203C0EBEC01EA41E801
F013E013E0A23983C003C01203A33907800780A3EC0F00EA0F001504141EA2001EEB1C08
143CEC1C10152048EB0C600018EB07801E1A7E9924>110 D<000F13F03811830C3821C4
1CEBE83C3841F07C13E014381400485A1203A3485AA448C7FCA4121EA45A1218161A7E99
1B>114 D<EB1FC0EB60203801C010EB800838030038481378A21430EB800013E013FE38
03FF806C13C07EEB0FE01301A2EA3800127C14C0EAF80100701380EA400338200700EA18
1CEA07F0151A7D991C>I<13301378A25BA4485AA4B51280A23803C000A2485AA448C7FC
A4121EA45A1302A25B12785BEA38101330EA1C40EA0F8011257EA416>I
E /Fh 29 121 df<B612C0A61A067F9822>45 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA
3F80EA1F00C7FCB3A4121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2C77AB1D>
58 D<B812E017FE717E26007FF8C713E06D48EC1FF8011FED07FCEF01FF717F727EF01F
E085727E1807727E85180185721380A21AC0197FA21AE0A2193F1AF0A51AF8AC1AF0A5F1
7FE0A31AC0A2F1FF80A24E1300A26118034E5A614E5A4E5A4E5A4E5A4D48C7FCEF07FE01
3FED1FF8496CECFFE0B912804DC8FC17E045477DC64F>68 D<BA1280A3C601F0C7120F6D
48020013C0013F163F181F180F18071803A2180119E0A21800A51970A217E0A21900A416
01A316031607163F91B6FCA39138E0003F160716031601A31600A3190EA394C7121CA519
3CA21938A21978A219F8A2F001F01803A2180F181F017F167F496CEC07FFBA12E0A33F47
7DC646>I<BAFCA3C601F0C7121F6D4802011380013FED007F183F181F180F1807A21803
19C0A21801A5F000E0A3EE01C01900A51603A31607160F167F91B6FCA39138E0007F160F
16071603A31601A693C9FCB1497EEBFFFCB7FCA33B477DC643>I<DB03FF140C033F01F0
131C4AB512FC0207D9007F133CDA1FF090380F807CDA7FC0903803C0FC4AC812F0D903FC
15794948153F4948151F4948150F494815074948150313FF4890C912015B00031700485A
197C120F5B001F183CA2485AA2191C127FA25B96C7FC12FFAD007F93B612F8A27F943900
3FFE00003FEF0FFC1807A26C7EA2120F7F1207A26C7E12017F6C7F137F6D7E6D7E6D6C15
0F6D7ED903FE151DD900FF1538DA7FC014F0DA1FF8903803E07CDA07FF90383FC03C0201
90B5EA001CDA003F01F8130C030301C090C7FC45497AC751>I<B77EA3C66C48CAFCEB3F
F86D5AB3B3A4F00380A4F00700A560A360181E183EA2187E18FE17011703170F013F153F
496C49B45AB9FCA339477DC641>76 D<ED0FFE92B512E0913907F803FC91391FC0007F02
7FC7EA1FC002FE6E7ED903FCEC07F8D907F0EC01FC49486E7E011F8249486F7E49486F7E
49C96C7EA24848707E0003844916070007844848707EA2001F84A24982003F1980A3007F
19C04982A300FF19E0AD007F19C06D5EA4003F1980A26D5E001F1900A26C6C4C5AA20007
606D160F0003606C6C4C5AA26C6D4B5A6D6C4B5A013F5F6D6C4BC7FC6D6C4A5A6D6C4A5A
6D6C4A5AD900FEEC0FE0DA7F80EB3FC0DA1FE001FFC8FC913907FC07FC0200B512E0DB0F
FEC9FC43497AC750>79 D<B812C017FC17FFC69026F0000113C06D489038003FF0013FED
0FF8717E717E717E19808319C019E0187FA219F0A819E0A2F0FFC0A219805F19004D5A4D
5AEF0FF0EF3FE0933803FF8091B648C7FC17F002E0CAFCB3AB497E497EB612F8A33C477D
C646>I<B712FEEEFFE017FC3B007FF8000FFF6D48010013C0011FED3FE0EF1FF8EF07FC
717E8483858583A285A761A24D5BA296C7FC4D5A4D5A60EF1FF0EF3FC005FFC8FCEE0FFC
91B612E017809139F0000FE0EE03F8EE00FC177E177F717E717E84A2717EA284A484A584
A41A0272130783A27113801A0E496C80496C6EEBC01CB600FE027F131895381FF0709538
07FFE0CCEA7F8048487DC64C>82 D<003FBAFCA3903BF8000FFE000701C06D48130090C7
163F007EF01F80007C180FA200781807A300701803A500F019C0481801A5C893C7FCB3B3
A64B7E92383FFF800103B712F8A342467CC54B>84 D<B600E0021FB5FCA3000101FCC800
0313F026007FF0030013804AEE7F00013F173E193C6D6C1638A280010F5FA26E16F00107
5FA26D6C4B5AA2806D4C5AA26F14076D94C7FCA26E6C140EA281023F5DA26F143C021F15
38A26E6C5CA26F14F002075DA26F130102035DA26E6C495AA2EE80076E92C8FCA2705A03
7F130EA26F6C5AA2EEF03C031F1338A2EEF878030F137016FC03075BA216FF6F5BA36F5B
A26F90C9FCA3167EA3163CA248487EC64D>86 D<1304130E131F497E497EEBFBE03801F1
F03803E0F83807C07CEB803C48487E001E7F48EB078048EB03C048EB01E00060EB00C01B
1074C734>94 D<EB03FE90383FFFC09038FC03F03901E000FCD80380137E48C77E486C6D
7E01E080001F140F6D80A26F7E6C5AA2EA0380C8FCA4EC01FF147F903803FF8790381FF0
07EB7F803801FE00EA03F8485A485A485A123F5B007F161CA248C7FCA3150FA36C6C131B
15336C6C903831F838001F14613B0FF001C0FC703B03FC0780FFE03B00FFFE003FC0D90F
F8EB1F802E2F7CAD34>97 D<13FE12FFA3120312011200B3A315FF020713E091381F01FC
913838007E4AEB1F8002C06D7E6D486D7E707E91C77F496E7EA2707EA283A2EF7F80A318
C0AA1880A217FF1800A25F16015F5F6D4A5A6E130701FD5DD9F9C0EB0F80D9F8E0013FC7
FCD9F078137E91381E03F89039E00FFFE090260001FEC8FC32497DC739>I<EC3FE09038
01FFFE903907E01F8090391F8003C0013EC712E001FC1470484814F8000314034914FC00
071407485A121F49EB03F8123FED00E01600127F5BA212FFAA127FA27F123F160E121F7F
000F151C7F000715386C7E000115706C6C14E0017EEB01C090391F80078090390FE03E00
903801FFFC9038003FE0272F7DAD2E>I<EC7F80903803FFF090380FC0FC90383F003F01
7CEB1F8049EB0FC00001EC07E0485A4848EB03F0000F15F8A24848EB01FCA2123FA24848
14FE1500A212FFA290B6FCA20180C8FCA6127FA37F123F160E121F7F000F151C12076D14
38000315706C7E6C6C14E0013EEB03C090391F800700903807E03E903801FFF89038003F
C0272F7DAD2E>101 D<EC07F0EC3FFCEC7C0E903801F81F903903F03F80903907E07FC0
EB0FC0A2EB1F80013FEB3F80ED1F00EC000E4990C7FCB1B612E0A3C66CC8FCB3B2804848
7E007FEBFFC0A322497DC820>I<49B4EB03F0010F9038E01FFC903A1F83F07C3E903A7E
00FDE07E01F8EB3F800001ED003C484890381F80180007EDC000A248486D7EA2001F81A7
000F5DA26C6C495AA200035D6C6C49C7FC0000143ED801FE13FC90389F83F039030FFFE0
010190C8FC48CAFCA67F7F7F6CB512FEEDFFE06C15F86C15FE6D8048B712802703E00001
13C0D80F809038003FE048C8120F003EED03F0003C1501007C16F80078150012F8A5007C
ED01F0A26CED03E0001E16C06CED0780D807C0EC1F006C6C143ED800FCEB01F890393F80
0FE0010FB51280010001F8C7FC2F437DAC34>I<EA01F0487E487E487EA56C5A6C5A6C5A
C8FCAE13FE127FA3120312011200B3B1EA03FFB512FCA316467DC51C>105
D<13FE12FFA3120312011200B3B3B3A83803FF80B512FEA317487DC71C>108
D<D801FCD97FC0EB07FC00FF902601FFF890381FFF8091260780FC9038780FC091260E00
3E9038E003E00003011890263F01807F000149903A1F830001F800004902C6804A14CCD9
FD80D90FD8130005F88001FFC75BA3495DB3AA2603FF80D93FF8903803FF80B5D8FE0FB5
00E0B512FEA34F2D7CAC56>I<D801FCEB7F8000FF903803FFF091380781F891380C007C
000349137E0001497F000049804A131FEBFD808301FFC7FCA35BB3AA2603FF80EB7FF0B5
D8FE1FB512C0A3322D7CAC39>I<EC3FE0903801FFFC903807E03F90391F800FC090397E
0003F0496D7E48486D7E4848147E0007157F4980000F16804848EC1FC0A2003F16E0A249
140F007F16F0A300FF16F8AA007F16F0A36C6CEC1FE0A3001F16C06C6CEC3F80A26C6CEC
7F000003157E6C6C5C6C6C495A017E495A90391F800FC090390FE03F80902603FFFEC7FC
9038003FE02D2F7DAD34>I<01FE13FF00FF010713E091381F01FC913838007E0003496D
7E000101C06D7E6C6C486D7E707E91C77F496E7E160183A2707EA21880A2177F18C0AA18
8017FFA21800A24C5AA24C5A5F6D4A5A804C5A6EEB1F80496C49C7FC027813FE91381E03
F891380FFFE0DA01FEC8FC91CAFCAF3803FF80B512FEA332417DAC39>I<3901FC01FC00
FFEB07FF91380E0F809138181FC000039038303FE000011360000013C0A29039FD801FC0
ED0F80ED070001FFC8FCA45BB3A77F00037FB67EA3232D7EAC28>114
D<130EA7131EA4133EA3137EA213FE120112031207001FB512FCB6FCA2C648C7FCB3A415
0EAB017E131C137F7F151890381F803890380FC070903807E0E0903801FFC09038007F00
1F417EBF28>116 D<01FEEC1FC000FFEC1FFFA30003EC007F0001153F0000151FB3A916
3FA3167F137EA26D14DF9238019FE06D9038031FF090260F8006EBFFC0903807F01C9038
01FFF89026003FE0EBC000322E7CAC39>I<267FFFF890B512C0A3000101E090387FFC00
6C6C48EB3FE0013FEC1F80011F92C7FC6E131E6D6C5B01075C6D6C5B6E5B903801FE0101
00495A91387F0780DA3F8FC8FC15CEEC1FDEEC0FFC6E5AA26E7E14014A7E4A7E4A6C7EEC
0E3F91381E1FC04A6C7E02787F4A6C7EECE00301016D7ED903C07F49486C7E49C77E707E
496E7E017F81484881000F6DEB7FFCB5D8E001B512F0A3342C7FAB37>120
D E /Fi 10 115 df<3801FFF8D8001FC7FC131EA35BA45BA45BA4485AA315803903C001
00A25C140238078006A25C141C380F0078B512F8191F7D9E1D>76
D<D801FEEC7FC0D8001EECFC005E0117EB0178A20127EB02F01504A215080147EB09E015
111521A20187495AEB83801583A23A01038107801482A2148400024AC7FC14881490A239
0401E01EA214C0000C1380001C143E3AFF8103FFC02A1F7D9E29>I<EBF180380389C038
070780EA0E03121C123C383807001278A3EAF00EA31420EB1C40A2EA703C135C38308C80
380F070013147C9317>97 D<137EEA01C138030080EA0E07121E001C1300EA3C0248C7FC
A35AA5EA70011302EA3004EA1838EA07C011147C9315>99 D<137CEA01C2EA0701120E12
1C123CEA3802EA780CEA7BF0EA7C0012F0A4127013011302EA3804EA1838EA07C010147C
9315>101 D<EB1E30EB7138EBE0F03801C070EA03801207EB00E05AA3381E01C0A4EB03
80A2EA0E07130B38061700EA01E7EA0007A2130EA21230EA781C485AEA6070EA3FC0151D
7F9315>103 D<EA01E0120FEA01C0A4485AA448C7FCA2131E1363380E8180380F01C012
0EA2381C0380A438380700A3EB0E1000701320A2131CEB0C4000E013803860070014207D
9F17>I<13C0EA01E0A213C0C7FCA7120E12131223EA4380EA4700A21287120EA35AA3EA
38401380A21270EA31001232121C0B1F7C9E0E>I<381C0F80382630C0384740601380EB
0070A2008E13E0120EA3381C01C0A3EB038400381388A2EB0708EB031000701330383001
C016147C931A>110 D<EA1C1EEA266138278380EA47871307EB0300008EC7FC120EA35A
A45AA45A123011147C9313>114 D E /Fj 33 121 df<127012F012F8A212781208A312
10A31220A21240050E7C840D>44 D<127012F8A3127005057C840D>46
D<EA03F0EA0E1C487EEA1806EA380738700380A400F013C0AD00701380A3EA7807003813
00EA1806EA1C0E6C5AEA03F0121F7E9D17>48 D<13801203120F12F31203B3A6EA07C0EA
FFFE0F1E7C9D17>I<EA03F0EA0C1CEA100E487E00401380128000F013C0EAF803A3EA20
0712001480A2EB0F00130E5B5B5B13605B485A48C7FC000613405A5A00101380EA3FFF5A
B5FC121E7E9D17>I<EA03F0EA0C1CEA100EEA200F007813801307A2EA380F12001400A2
131E131C1370EA07F0EA003C130E130FEB0780A214C0122012F8A300F013801240EB0F00
EA200EEA183CEA07F0121F7E9D17>I<1306A2130EA2131E132EA2134E138EA2EA010E12
02A212041208A212101220A2124012C0B512F038000E00A7EBFFE0141E7F9D17>I<EA18
03EA1FFE5B5B13E00010C7FCA6EA11F0EA161CEA180EEA10071480EA0003A214C0A31270
12F0A200E013801240EB0700EA20066C5AEA0838EA07E0121F7E9D17>I<137CEA0182EA
0701380E0380EA0C0712183838030090C7FC12781270A2EAF1F0EAF21CEAF406EAF807EB
0380A200F013C0A51270A214801238EB07001218EA0C0E6C5AEA01F0121F7E9D17>I<12
40387FFFE014C0A23840008038800100A21302485AA25B5BA25BA21360A213E05B1201A4
1203A76C5A131F7E9D17>I<EA03F0EA0C0CEA1006EA3003382001801260A31270387803
00123EEA3F06EA1FC8EA0FF0EA03F8487EEA0C7EEA103F38300F80EA6007EB01C012C013
00A31480EA600100201300EA1002EA0C0CEA03F0121F7E9D17>I<EA03F0EA0E18487E48
7E13071270EB038012F0A214C0A5EA7007A21238EA180BEA0E13EA03E338000380A3EB07
001230EA7806130EEA700CEA2018EA1070EA0FC0121F7E9D17>I<90380FE0109038381C
309038E002703803C00139078000F048C71270121E15305A1510127C127800F81400A7EC
3FFEEC01F000781300127C123CA27EA27E6C7E3903C001703900E002309038380C109038
0FF0001F217E9F24>71 D<39FFF07FF8390F000780AD90B5FCEB0007AF39FFF07FF81D1F
7E9E22>I<B46CEB07FE000715C0A2D805C0130BA2D804E01313A301701323A26D1343A3
6D1383A290380E0103A3EB0702A3EB0384A2EB01C8A3EB00F0A21460121FD8FFE0EB7FFE
271F7F9E2A>77 D<007FB512E038780F010060EB006000401420A200C0143000801410A4
00001400B3497E3803FFFC1C1F7E9E21>84 D<EA1FE0EA3030EA7818131CEA300E1200A3
13FEEA078EEA1E0E1238127800F01310A3131E127838386720380F83C014147E9317>97
D<121C12FC121CAA137CEA1D87381E0180EB00C0001C13E01470A21478A6147014F014E0
001E13C0381A018038198700EA107C15207E9F19>I<EA01FCEA0706EA1C0F1238130600
78C7FC127012F0A61270127800381380A2381C0100EA0706EA01F811147F9314>I<EB01
C0130F1301AAEA01F1EA070DEA0C03EA180112381278127012F0A61270A21238EA180312
0CEA070D3801F1F815207F9F19>I<EA03F0EA0E1C487E487EA21270EB038012F0A2B5FC
00F0C7FCA31270A26C1380A2381C0100EA0706EA01F811147F9314>I<137CEA01C6EA03
0F1207EA0E061300A7EAFFF0EA0E00B2EA7FE01020809F0E>I<121C12FC121CAA137C13
86EA1D03001E1380A2121CAE38FF8FF014207E9F19>104 D<1238127CA31238C7FCA612
1C12FC121CB1EAFF80091F7F9E0C>I<121C12FC121CAAEB1FE0EB0780EB060013045B5B
5B136013E0EA1DF0EA1E70EA1C38133C131C7F130F7F148014C038FF9FF014207E9F18>
107 D<121C12FC121CB3ABEAFF8009207F9F0C>I<EA01F8EA070E381C0380383801C0A2
387000E0A200F013F0A6007013E0A2383801C0A2381C038038070E00EA01F814147F9317
>111 D<EA1CF0EAFD18EA1E3CA21318EA1C00AEEAFFC00E147E9312>114
D<EA0FC8EA3038EA6018EAC008A3EAE000127CEA3FE0EA1FF0EA07F8EA003CEA800E1306
12C0A21304EAE00CEAD818EA87E00F147F9312>I<1202A31206A2120EA2123EEAFFF8EA
0E00AB1304A5EA07081203EA01F00E1C7F9B12>I<381C0380EAFC1FEA1C03AE1307120C
EA061B3803E3F014147E9319>I<39FF9FE1FC393C078070391C030060EC8020000E1440
A214C0D80704138014E0A239038861001471A23801D032143A143E3800E01CA2EB6018EB
40081E147F9321>119 D<38FF87F8381E03C0380E0180EB0300EA0702EA0384EA01C813
D8EA00F01370137813F8139CEA010E1202EA060738040380000C13C0003C13E038FE07FC
16147F9318>I E /Fk 21 119 df<EC1FC0ECFFF8903803F07C90380F801E49486C1302
013E90380780064914C049EB03E04848150C484814F012074848151815014848ECF83012
3F176090C7FC4816C0A2EEF98012FEEEFB0016FEA25E485DA4127C007E1403003E140703
1C1304001E0238130C6C14E03B078007C07C183B03E03F003C702601FFF8EB1FE026003F
C0EB07802F277CA537>11 D<EB07F0D91FFC1430EB7FFE90B51460000380486E13C0380F
F03F903A8007E00180381E000148EB00F000309138700300007014380060EC18065A5E15
0C5AC85BA26F5AA35EA35EA3ED0780A393C7FCA31506A3150EA2150C151CA45DA45DA45D
A315402C387EA52D>13 D<EC0380EC1FFE91383FFFC0027113E0ECC03F903801801FED0F
C00103EB038092C7FCA280A213018080A26D7EA280147E147F80816E7EA2ECFFE001037F
EB0F8790381F07F8EB3C031378496C7EEA01E01203EA07C0000F13005B121F48C7FCA212
3E127EA3485CA21401A25DA214035DA2007C495AA2003C5C003E49C7FC001E131E6C131C
6C6C5A3803E0F0C6B45AEB3F80233F7DBD26>I<131F14E0EB03F06D7E80130080A2147F
A28081A2141F81A2140F81A2140781A2140381A2140181A2140081157E157FA34B7EEC01
BFEC039F9138071FC0140EEC1C0F02387F1470ECF007D901E07FEB03C09038078003D90F
007F131E013E13014980491300484880485A0007157E4848147F485A48C87E007E168048
151F007CED0FC0003815072A3D7CBB32>21 D<011FB612F8017F15FC90B7FC000316F848
16F09026C03003C7FCEA0E005A48EB70070030EB60065A4813E00040140EC712C01301A3
903803801EA21307A214005BA25B011E133E133E153F133C137C8101FC805B000181A249
130F5E6C486DC7FC2E267EA431>25 D<121C123E127FEAFF80A3EA7F00123E121C090979
8818>58 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA0300A21206A2
5A5AA25A12200A1A798818>I<1860EF01F01707171FEF7FE0933801FF00EE07FCEE1FF0
EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FC
EB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38
007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07
FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0EF1FF017071701EF0060343479
AF43>I<17181738173C177C17FCA21601A216031607A2160D831618163816301660A216
C0150116804B487EA203067F150E150C5DA25D157015604B80A24A48133F140392C7FC14
06A2020FB6FC5CA20230C7EA3FC0A24A141F14E05C495AA249C8FC1306A24982170F5B13
38137813F8D807FCED3FF0267FFFC0010FB512C0B517E06C4916C03B3D7DBC41>65
D<0103B812F8A390260007F8C7121F18014B14001978A219704A481530A44A5AA21960A2
4A4813101730A219004AC75AA217E0A202FE495A160F91B6FCA2495D9138FC000F160716
03494891C8FCA31980494801061301A2F0030093C7FC49485D1806180E180C4948151C18
18183818304948157018F04D5A170349C8EA0FC0173F49913803FF80B9FC95C7FCA23D3B
7CBA40>69 D<EEFFC0030F13F892387F00FEDA01F8EB1F80DA07E06D7E4A48EB03F0023F
C76C7E147E4A6E7ED903F8157E495A494881495A4948168091C9FC49161F01FE17C0485A
A2485A12075B120FA2485A183FA2485AA34848EE7F80A4F0FF0048CAFC60170160170360
17076C5F170F604D5A4D5A273F8003F091C7FC4A6C5B001FD91C0C13FE903AC0180601FC
000F9039300203F0903AE0600307E000074B5A2603F0C0495AD801F8027EC8FCD800FC5C
90393F6007F090391FF03F800107B514C09038007FE3EC00030307495AA217034DC7FC70
5A171EEEE07EEEFFFCA25F5F6F5B6F5B6F5B047EC8FC3A4D7CBB44>81
D<DB1FE013809239FFFC01C002039038FF038091390FE01F8391391F0003C7023EEB00EF
0278EC7F004A80495A4948800107151E5C130FA249C8120CA3171C17186E140894C7FC80
808014FF6D13E06D13FEEDFFC06D14F06D806D6C7F021F7F02017FEC003F03037FED007F
163F161F83A2160F00045E120CA4001C4BC7FCA2161E163E003C153C003E5D5E003F1401
486C495AD87DC0495AD878F0011FC8FCD8707F137E486CB45AD8C00F13F001001380323D
7BBB35>83 D<267FFFFC91380FFFF0B56C4A13F84A6E13F0000190C80001130049ED00F8
606000005F1701604DC7FC5F17066D5D7F5F5FA25F17E06E5C4C5A133F4CC8FC1606A25E
6E5BA2011F5C167016605EA24B5A6E48C9FCA2010F13065DA25D1538ECF0305D13075DEC
F180A202F3CAFC14FEA26D5AA25C5CA25C5CA26D5A3D3C7BBA32>86
D<147E49B47E903907C1C38090391F0067C0013E136F49133F5B4848131F00031580485A
A2485A001FEC3F005B123FA290C7127E5AA300FE5CA44A5A481506A3913803F00CA2127C
02071318140F6C131B001E013113306C01E11360260783C013E03A03FF007FC0D800FCEB
1F0027277DA52D>97 D<167C4BB4FC923803C38092380700C0ED0F07ED1E0FED3E1F163F
157EA292387C1F809238FC0E0093C7FCA34A5AA54A5AA40103B512F8A25E90260007E0C7
FCA44A5AA54A5AA54AC8FCA6147EA55CA5495AA45C1303A25CA3381E07C0123FEA7F875C
EAFF0F91C9FCEAFE0EEA7C1EEA601CEA3878EA1FE0EA07C02A4F7CBC2A>102
D<147014F8EB01FC1303A214F8EB01F0EB00E01400AC137CEA01FEEA038738060780000C
13C01218A2EA300FA21260EB1F80A212C0EB3F001200A2137EA25BA3485AA3485A140CA2
EA07E01418EA0FC01430A214601380000713C0EB81803803C300EA01FEEA007C163B7EB9
1E>105 D<D801F0EB3FC0D803FCEBFFF03A061E03C0F83A0C1F07007C26180F0C7F1498
003013B0D91FE0133F5C12605C163E4848C7127EA21200A2017E5CA34B5A5BA24B5AA248
5A923807E00CA3484890380FC018A21730168048481560A217C092380781804848EC8700
0007EC03FE6C48EB00F82E277EA534>110 D<D801F0137E3903FC03FF3A061E0781803A
0C1F0C03C03A180F180FE0ECB01F003013E0131F02C013C0006001801380ED0F0092C7FC
4848C8FCA21200A2137EA45BA4485AA4485AA4485AA4485A12076C5A23277EA527>114
D<EC7F80903801FFE0903807C07090380E001849130C133C0138137C017813FCEB700113
F0A29038F800F815606D1300EBFF8014FC14FF6D13806D13C06D13E0010713F0EB007FEC
07F814011400121E123F5A4814F0A24814E04813014814C00060EB03800070EB07006C13
1E000F137C3807FFF0C613801E277CA528>I<EB01C0497E1307A2495AA4495AA449C7FC
A4137E007FB51280B6FC1500D800FCC7FCA4485AA4485AA4485AA4485AA4485A1406A25C
EA3F005CA25CA25C6C5B495AD80F07C7FCEA07FEEA01F819377DB51F>I<017CEB01E048
B4EB03F03903878007260607C013F8120C14E00018140300301400A24848481378A34848
481330A2120049C7FC1660137EA34914C0A3ED0180485AED0300A21506A25DA25D00005C
A2017C5B90383C01C090381F0780D90FFEC7FCEB03F825277EA52A>118
D E /Fl 17 107 df<007FB812E0B912F0A26C17E03404799743>0
D<121C123E127FEAFF80A3EA7F00123E121C0909799A18>I<0060ED018000F0ED03C06C
1507007CED0F806CED1F006C153E6C6C5C6C6C5C6C6C495AD801F8EB07E06C6C495A017E
495A6D49C7FC90380F807C6D6C5A903803E1F0903801F3E06DB45A6E5A6EC8FCA24A7E4A
7E903801F3E0903803E1F0903807C0F890380F807C90383F003F017E6D7E496D7E48486D
7ED803E0EB01F048486D7E4848147C48C87E003E8148ED0F8048ED07C04815030060ED01
802A2874A943>I<EB0FF0EB7FFE48B512804814C04814E04814F04814F84814FCA24814
FEA3B7FCA86C14FEA36C14FCA26C14F86C14F06C14E06C14C06C148039007FFE00EB0FF0
20207BA52B>15 D<007FB812FEBAFCA26C17FECCFCAD007FB812FEBAFCA26C17FECCFCAD
007FB812FEBAFCA26C17FE38267BA843>17 D<18E0EF03F0170FEF3FE0EFFF80933803FE
00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0EC
FF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA
7FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE9138
00FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0F
F01703EF00E01800AD007FB812E0B912F0A26C17E0344479B643>20
D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007FC0EF1FF01707171FEF7FE0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED
07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848
CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAD007FB812E0B912F0A26C17E0344479
B643>I<14301478A25CA313015CA2495AA2495A130F91CDFC131E5B137C5B485AEA07E0
EA1FC0007FBB1280BC12C0A26C1A80D81FC0CDFCEA07E0EA01F06C7E137C133C7F7F8013
076D7EA26D7EA2801300A31478A214304A2E7AAC56>32 D<18034E7EA2727EA3851801A2
727EA21978197C193C858586737E737EF101F8F100FE007FBB1280BC12E0A26C1A80CDEA
FE00F101F8F103E04F5A4F5A97C7FC191E61197C197861A24E5AA2180361A34E5AA272C8
FC4B2E7BAC56>I<020FB51280027F14C049B6FC01071580D91FF8C8FCEB3FC049C9FC13
FCEA01F0485A485A485A90CAFC5A121E123E123C127C1278A312F85AA2B8128017C0A217
8000F0CAFCA27E1278A3127C123C123E121E121F7E7F6C7E6C7E6C7EEA00FC137FEB3FC0
EB1FF80107B61280010115C06D7E020F14802A3479AF39>50 D<0060160600F0160FA26C
161F0078161E007C163E003C163CA2003E167C001E1678A2001F16F86C16F06D14010007
16E0A26D1403000316C06D140700011680A290B7FC6C1600A30178C7121E017C143E013C
143CA2013E147C011E1478011F14F86D5CA2EC800101075CECC00301035CA2ECE0070101
5CA2ECF00F010091C7FC6E5AEC781EA2EC7C3EEC3C3CEC3E7CEC1E78A2EC1FF86E5AA36E
5AA26E5AA26E5A303D80BB31>56 D<D801F8EC07F0D803FE147F3B070F8001FFF83A0C03
C007FB3B1801E01F83FC00389039F03E01FE393000F87800709138E000FFDA7DC07F027F
8100604A6D7E00706DC7FC717E0030160F0038836C6E6D7E7E6C707E01801501D803C082
0001707EEA00E06FEC7F801370F03E0018F8EF03F0EF3FC092B6C7FC17FC17C0EDC01F12
60A21360A2EA30E0EA31C0EA1F80D80F001380C7FCA3707EA51500A21220003C133E5A48
137E0018137C027815076C01F8903807F01F6C49157C260701E0903803F8F02603C3C06D
B45AC6B4486D1380013EC8003EC7FC393E7CBC3E>60 D<15FC140FEC3F80EC7E0014F849
5A495A1307A2495AB3A9495AA249C7FC137E5BEA03F8EA7FE048C8FCEA7FE0EA03F8C67E
137E7F6D7EA26D7EB3A96D7EA213036D7E6D7E147EEC3F80EC0FFC14001E577AC02B>
102 D<127CEAFFC0EA07F0EA01F8EA007C7F7F80A26D7EB3A96D7EA26D7E6D7E6D7E147F
EC1FF8EC03FCEC1FF8EC7F0014FC495A495A495AA2495AB3A9495AA291C7FC133E5B485A
EA07F0EAFFC0007CC8FC1E577AC02B>I<14C0EB01E0A2130314C0A213071480130F1400
A25B131EA2133E133CA2137C137813F85BA212015BA212035B12075BA2120F90C7FCA25A
121EA2123E123C127C1278A212F85AA27E1278A2127C123C123E121EA2121F7EA27F1207
A27F12037F1201A27F1200A27F1378137C133CA2133E131EA2131F7FA21480130714C013
03A214E01301A2EB00C0135678C021>I<126012F0A27E1278A2127C123C123E121EA212
1F7EA27F1207A27F12037F1201A27F1200A27F1378137C133CA2133E131EA2131F7FA214
80130714C01303A214E01301A2130314C0A213071480130F1400A25B131EA2133E133CA2
137C137813F85BA212015BA212035B12075BA2120F90C7FCA25A121EA2123E123C127C12
78A212F85AA2126013567BC021>I<126012F0B3B3B3B3AD1260045776C018>I
E /Fm 72 123 df<ED0380A24B7EA24B7EA24B7EA24B7EA2ED67FCA2EDC3FEA291380181
FFA24AC67F167F020680163F4A80161F4A80160F4A8002706D7E146002E06D7E5C01016E
7E5C01036E7F91C8FC496F7E1306010E6F7E130C011C6F7E131801386F7E133001706F7E
136001E06F7E5B0001707E5B000370138090CAFC48EF7FC01206000EEF3FE0120C001CEF
1FF0001FB9FC4818F8A24818FCA2BA12FEA23F3D7CBC48>1 D<DA07FC137F913A3FFF81
FFC0913AFC03C7C0E0903B03F0006F81F0903B07C001FF03F8903A0F8003FE0790391F00
07FC5B017EED03F0923903F801E0017C010190C7FC13FCADB812FCA32800FC0001F8C7FC
B3AC486C497E3B7FFFF07FFFF8A3353D7FBC32>11 D<EC07FCEC3FFF9138FC0380903903
F000C0D907C0136090390F8001F04948487E491307137EA2137C01FC6D5AED00C093C7FC
AAED01F8B7FCA33900FC00071501B3AB486C497E3B7FFFF07FFFF0A32C3D7FBC30>I<12
1C127FA2EAFF80A7EA7F00AB123EAB121CAB1208C7FCA8121C123E127FEAFF80A3EA7F00
123E121C093D79BC18>33 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3
EA0300A21206A25A5AA25A12200A1A79BB18>39 D<146014E0EB01C0EB0380EB0700130E
5BA25B137813705B12015B1203A2485AA248C7FCA35A121EA2123EA2123CA2127CA51278
12F8B21278127CA5123CA2123EA2121EA2121F7EA36C7EA26C7EA212017F120013701378
13387FA27F7FEB0380EB01C0EB00E01460135678C021>I<124012E012707E7E7E7EA26C
7E7F12016C7E7F13701378A27FA27FA3131F7FA21480A21307A214C0A5130314E0B214C0
1307A51480A2130FA21400A25B131EA35BA25BA2137013F05B485A12035B48C7FCA2120E
5A5A5A5A124013567BC021>I<1518153CB3A7007FB812FEBAFCA26C17FEC8003CC8FCB3
A7151838387BB143>43 D<121C127E127FEAFF80A213C0127FA2121C1200A5EA0180A3EA
0300A21206A25A5AA25A12200A1A798818>I<B512FCA516057F941D>I<121C123E127FEA
FF80A3EA7F00123E121C0909798818>I<1506150FA2151F151EA2153E153CA2157C1578
A215F815F0A2140115E0A2140315C0A214071580A2140F1500A25C141EA2143E143CA214
7C1478A214F85CA213015CA213035C13075CA2130F91C7FCA25B131EA2133E133CA2137C
1378A213F85BA212015BA212035BA212075BA2120F90C8FCA25A121EA2123E123CA2127C
1278A212F85AA2126020577BC02B>I<EB03FC90381FFF8090387E07E09038F801F04848
6C7E4848137C48487F48487FA248C7EA0F80A24815C0A3007EEC07E0A500FE15F0B3007E
15E0A4007F140F6C15C0A36C15806D131F000F1500A26C6C133E6C6C5B6C6C5B6C6C485A
90387E07E090381FFF80D903FCC7FC24397DB72B>I<EB01C013031307131F13FFB5FCA2
131F1200B3B3A8EB7FF0007FB512F8A31D3879B72B>I<EB0FF8EB7FFF48B512C03903E0
3FE039070007F8000E6D7E00186D7E481300157F481580127C00FE143F6C15C07FA46CC7
FC123EC8FC1680157F1600A215FEA24A5A5D4A5A4A5A5D4A5A4AC7FC143E143C5C5C495A
495A495A49C8FC011E14C013381330491301491480485A48C7FC00061403000FB6FC5A5A
481500B7FCA322387CB72B>I<EB07FC90383FFF8090B512E03901F807F03903C001F848
C77E000E80D80FC07F486C7F6D1480A46C5A6C5A0001C71300C85AA25D4A5A5D4A5A5DEC
0FC0023FC7FCEB1FFCECFF8090380007E0EC01F86E7E157E157FED3F8016C0A2ED1FE0A2
16F0A3123F487E487EA216E0A2153F4914C06CC7FC0070EC7F806C15006C14FE390F8001
FC3907F007F80001B512E06C6C1380D907FCC7FC24397DB72B>I<151C153CA2157C15FC
A214011403A21407140F141D141914311471146114C11301EB038114011307130E130C13
1813381330136013E0EA01C01380EA03005A12065A121C5A123012705AB712FCA3C73801
FC00AB4A7E49B512FCA326397EB82B>I<00061406D80780131E9038F801FC90B55A5D5D
5D92C7FC5C38067FF090C9FCABEB03FCEB1FFF90387C0FC09038E003E039078001F090C7
7E0006800004147EC8FC157FED3F80A316C0A4123E127F5A7FA290C71380A248147F0060
1500A26C14FE00385C6C495A6C495A6C6C485A3903E01FC06CB5C7FC6C6C5AEB0FF02239
7CB72B>I<EC1FC0ECFFF0010313FC90380FE03E90381F800690383E000349131F49EB3F
804848137F1203485AA24848EB3F00001F141E4990C7FCA2123FA2127F90C9FCA2EB01FE
903807FFC039FF0E03E090381800F849137C497F153F49EB1F80A24914C0ED0FE0A290C7
FC16F0A37EA56C7E16E0A2121FED1FC06C7E16800007EC3F006C6C133E6C6C5B6C6C5B90
387E03F06DB45A010F1380D903FEC7FC24397DB72B>I<EB03FC90381FFF804913E09038
FC03F03901E000F8D80380133C90C77E4880120EED0780A2121EA2121FA27F6DEB0F00EA
0FF06D131E01FE131C6C6C5B6CEBC070ECE1E06CEBFBC06C01FFC7FC133F6D7F6D13E049
7F017813FC3901E07FFE3903C01FFF48486C1380380F0003001E010013C048EC7FE0151F
48140FED07F04814031501A21500A316E01278ED01C07EED03806CEC07006C6C130ED807
E0133C3903FC01F8C6B512E0013F1380D907FCC7FC24397DB72B>56
D<EB03FC90381FFF80017F7F9038FE07F03901F001F848486C7E4848137C000F80484813
3F003F80168048C7FC16C0A248140F16E0A516F0A37E151FA26C7E001F143FA26C6C136F
12076C6C13CF3901F0018F39007C070FEB3FFED907F813E090C7FCA3ED1FC0A31680D807
80133F486C1400487E157E157C15FC49485AD80F805B390C0003E00007EB0FC02603C03F
C7FC3801FFFE6C13F8EB1FC024397DB72B>I<121C123E127FEAFF80A3EA7F00123E121C
C7FCB3121C123E127FEAFF80A3EA7F00123E121C092579A418>I<121C123E127FEAFF80
A3EA7F00123E121CC7FCB3121C127E127F5A1380A2127FA2121D1201A5EA0300A41206A2
5AA25A5AA21220093679A418>I<007FB812FEBAFCA3CCFCAEBAFCA36C17FE38167BA043>
61 D<EB3FE03801FFFE3907C03F80390E000FC00018EB07E048EB03F04814F8140100FC
14FC7E7EA3127E123CC7EA03F8A215F0EC07E0EC0FC0EC1F80EC3E00143C5C5C5C13015C
495AA291C7FC5BA21306AA130490C8FCA8130E131F497E497EA36D5A6DC7FC130E1E3D7B
BC29>63 D<150C151EA3153FA34B7EA34B7EA39138019FE0A202037F150FA202077FEC06
07A2020C7F1503A202187F1501A24A6C7EA34A6D7EA202E0804A133FA20101814A131FA2
49C77F91B6FCA249810106C71207A2496E7EA3496E7EA2013881013080A2017082016015
7FA201F082EA03F8D80FFC4A487EB500C0013FEBFFC0A33A3D7DBC41>65
D<B712F816FF17E0C69039C0001FF06D48EB07FC707E707E82EF7F8018C0173F18E0A718
C0A2EF7F8017FF18004C5A4C5AEE0FF8EE3FE091B61280A2913980001FE0EE03F8EE01FE
707EEF7F80EF3FC018E0171F18F0170F18F8A8EF1FF0A218E0173FEF7FC0EFFF804C1300
4C5A496CEB1FFCB812F017C04CC7FC353B7EBA3D>I<DBFFC01360020713F8023F01FE13
E09139FFC01F01903A03FE000783D907F8EB01E3D90FE0EB0077D91F80143F017FC8121F
01FE150F4915071201484815031207491501120F48481500A2123F5B1860127FA25B1800
12FFAB127FA26D1660A2123FA27F121F18C06C7E12076DED018012036C6CED03006C6C5D
1706017F5DD91F805CD90FE05CD907F814E0D903FEEB03C0903A00FFC01F8091263FFFFE
C7FC020713F8020013C0333D7BBB3E>I<B712F816FF17C0C69039C0003FF06D48EB07FC
EE01FEEE007F717E717E717E717EA2717E84170184170084A3F07F80A419C0AC1980A4F0
FF00A34D5AA2604D5AA24D5A4D5A4D5A173F4DC7FCEE01FEEE07FC496CEB3FF0B85A94C8
FC16F83A3B7EBA42>I<B91280A3C69038C000016D48EB003FEF0FC017071703A21701A2
1700A418E018601630A31800A31670A216F0150391B5FCA3EC800315001670A21630A218
0CA3181893C7FCA31838A21830A21870A218F018E017011703170F173F496CEB01FFB912
C0A3363B7EBA3B>I<B812FEA3C69038C000076D481300173F8383A283A283A418801701
A21660A294C7FCA416E0A21501150791B5FCA3EC800715011500A21660A693C8FCAEEBFF
E0B612F0A3313B7EBA38>I<DB7FC01330913807FFF8023F01FE1370913AFFC01F80F090
3A01FE0003C1D907F8EB00E1D90FE014334948141F49C8120F017E150713FE4848150348
4815011207491500120F48481670A3485A1830127FA25B95C7FC12FFAB007F037FB512C0
A27F9339003FF800003FEE0FF0A26C7EA36C7E12077F12036C7E6C7E137F6D6C141F6D7E
6D6C1433D907F81473D901FEEB01E1903A00FFE00FC0023FB5EA0070020701FC13309126
007FE090C7FC3A3D7BBB44>I<B6D8C03FB512F0A3C601C0C7383FF0006D486E5AB3A591
B7FCA30280C7121FB3A7496C4A7EB6D8C03FB512F0A33C3B7EBA41>I<B612C0A3C6EBC0
006D5AB3B3AF497EB612C0A31A3B7EBA1F>I<B612F0A3C601E0C8FCEB7F80B3AE1706A5
170E170CA4171CA3173C177CA2EE01FCEE03F8160F496C137FB8FCA32F3B7EBA36>76
D<B56C4BB5FC6E5DA2C61900D96FE0ED06FEA3D967F0150CA2D963F81518A3D961FC1530
A2D960FE1560A3027F15C0A36E6CEB0180A26E6CEB0300A36E6C1306A36E6C5BA26E6C5B
A36E6C5BA26E6C5BA3037F5BA392383F8180A2DB1FC3C7FCA3ED0FE6A3ED07FCA26F5AA2
13F0486C6D5AD807FE4C7EB527F000E001B6FCA3483B7DBA4F>I<B56C91B512F08080D8
007F923807FE006EEC01F8D96FF86E5A01671660EB63FC801361EB60FF816E7E143F816E
7E140F6E7E8114036E7E816E7F157F826F7E151F6F7E8215076F7E826F7E81EE7F8017C0
163FEE1FE017F0160FEE07F817FCEE03FE1601EE00FF18E0177F173FA2171F170FA21707
01F01503486C1501EA07FEB500F014001860A23C3B7EBA41>I<4AB47E021F13F891387F
00FED901F8EB1F80D907F0EB0FE0D90FC0EB03F049486D7E49C87E017E157E4981000117
804848ED1FC04848ED0FE0A2000F17F0491507001F17F8491503003F17FCA3007F17FE49
1501A300FF17FFAB007F17FE6D1503A4003F17FC6D1507001F17F8A26C6CED0FF0A20007
17E06D151F000317C06C6CED3F806C6CED7F00017F15FE6D5D6D6C495AD90FE0EB07F06D
6C495AD901FCEB3F80D9007F01FEC7FC91381FFFF802011380383D7BBB43>I<B712F016
FF17C0C69039C0003FF06D48EB07F8707E707E707EEF7F80A218C0173F18E0A718C0A217
7F188018005F4C5A4C5AEE0FF0EE3FE091B6128004FCC7FC0280C9FCB3A6497EB612C0A3
333B7EBA3B>I<B77E16F816FEC69039C001FF80903A7F80003FE0EE0FF0707E707E707E
A2838284A795C7FC5E5F5F4C5A4C5A4C5AEE3F80DB01FEC8FC91B512F816E091388003F8
ED007E82707E83707E83160783A683A61930A2707EA204011460496C6D7EB600C06D13C0
94383F838094380FFF00CAEA01FC3C3C7EBA3F>82 D<D90FF81360EB3FFF90B5EAC0E039
01F807E13907E000F1D80F80133B90C7121F48140F003E14071503481401A212FC1500A3
16607EA27E6C15007F13E0EA3FF8EBFF806C13F86CEBFF806C14E06C14F86C806C80013F
7F01071480D9007F13C0020713E0EC007FED1FF0150F150716F81503124012C01501A37E
A216F07E15036C15E0A26CEC07C0B4EC0F80D8FB801400D8F1F0133ED8F0FE13FC39E03F
FFF8D8C00F13E001011380253D7BBB30>I<003FB812F8A3D9E001EB800790C7EB000100
7CEE007C0078173CA20070171CA20060170CA500E0170E481706A4C81500B3B1020313C0
010FB612F0A3373B7DBA3E>I<B600C090B512F0A3C601C0C73807FE006D48EC01F8715A
1860B3B3A2013F5E80A2011F4B5AA26D6C4AC7FC01075D6D6C14066D6C5C6D6C1438027E
5C6E6C485A91391FF00FC00207B55A020149C8FC9138001FF03C3C7EBA41>I<B5D8FC01
B500FC90383FFFE0A300079026800007018001071300000190C76C48C7EA01FC49725A6D
020116706C1A60836E7F017F618480013F4E5AA2933801BFC06D6C4DC7FCA29338031FE0
6D6C1706A29338060FF06D6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA24C6C7E6D6C5FA204
707F91277F8060005CA204E014806F48EB7F81023F5F03C115C1DBE180EB3FC3021F94C8
FC03E315E303F3C7EA1FE7020F16E619F603FEEC0FFE02075EA24B140702035EA24B1403
02015EA24B140102005EA24B140003605D533C7EBA58>87 D<EAFFF8A4EAF000B3B3B3B3
A7EAFFF8A40D5777C018>91 D<EAFFF8A4EA0078B3B3B3B3A7EAFFF8A40D577FC018>93
D<1330137813FC487EEA03CF38078780380F03C0381C00E048137048133848131C48130C
160C76BA2B>I<EB1FF0EBFFFC3803E03F3907000F80486D7E9038C003E0486C6C7E81A2
14006C487F6C5AC8FCA4140FEB03FFEB1FF8EBFF00EA01FCEA07F0EA0FC0485A123F90C7
FC5A007E150612FEA31401A2007EEB037C127F3A3F80063E0C3A1FC00C3F1C3A0FF0381F
F83A03FFF00FF03A007FC007C027287DA62B>97 D<EA01F812FFA312071201B1EC0FF0EC
3FFEECF01F9039F9C007C09039FB0003E001FE6D7E496D7E167C49147E163E163FA21780
161FA217C0A91780A2163F1700A2167E167C6D14FC5E01F6495A01E3495A9039E1800F80
9026C0F03FC7FC9038807FFCC7EA0FE02A3D7EBB30>I<EB03FE90381FFFC090383E01F0
9038F800384848133C484813FC3907C001FE120F1380121F48C712FC1578481400A2127E
A212FEA9127EA2127F6C1403A26C7E15066C7E0007140C6C6C13186C6C13306C6C13E090
387E03C090381FFF00EB03FC20287DA626>I<ED07E0EC03FFA3EC001F1507B1EB01FC90
380FFF8790383F03C790387C0067D801F013374848131F4848130F120F491307121F48C7
FCA25A127EA212FEA9127EA2127F7EA27E6D130F120F6C6C131F6C7E6C6CEB77F86C6C90
38E7FFC090383E038790381FFF07D903FCEBE0002A3D7DBB30>I<EB03FCEB1FFF90387E
07C09038F801E03901E000F0000314784848137C48487F121F90C7123F4880A25A007E15
80A212FEA2B7FCA248C9FCA5127EA3127F6CEC0180A26C7E000FEC03007F000714066C6C
5B6C6C5BD80078137090383F01E090380FFF80D901FEC7FC21287EA626>I<147F903801
FFC0903807C0E090380F81F090381F03F8EB3E07137CA29038FC03F09038F801E0000190
C7FCAEB512FCA3D801F8C7FCB3AC487E387FFFF8A31D3D7FBC1A>I<903907F001F89039
3FFE0FFC90397C1F1E3E9038F007F03A01E003E01C2603C00113080007ECF000000F80EB
8000001F80A7000F5CEBC00100075C00035C6C6C485A6D485A26037C1FC7FC38073FFE38
0607F090C9FC120EA3120FA2EA07C090B512C06C14FC6C14FF6C1580000315C03A0F8000
3FE048C7EA07F0003EEC01F8003C1400127C0078157C12F8A5007C15F8A26CEC01F06CEC
03E06C6CEB07C0D803E0EB1F00D801FC13FE39003FFFF00107138027397EA52B>I<EA01
F812FFA312071201B1EC07F8EC1FFEEC781F9138E00F809039F98007C0D9FB007F150301
FE805BA35BB3A5486C497EB500F1B512E0A32B3C7EBB30>I<EA0380487E487E487EA36C
5A6C5A6C5AC8FCABEA03F012FFA3120F1203B3AB487EB512C0A3123A7EB917>I<EA03F0
12FFA3120F1203B2913801FFFCA39138007FC0ED7E00157C157015604A5A4A5A0206C7FC
5C5C5C147814FCEBF1FEEBF73EEBFE3F9038F81F80EBF00F816E7E1403816E7E14008115
7E81A2ED1F8016C0486CEB3FF0B500C0B5FCA3283C7DBB2D>107
D<EA03F012FFA3120F1203B3B3AF487EB512C0A3123C7EBB17>I<2701F803F8EB03F800
FFD91FFFEB1FFF913B3C0F803C0F80913BE007C0E007C03D07F9C003E1C003E02601FB00
D9F3007F0301140101FE02FE80A2495CA2495CB3A5486C496C497EB500F0B500F0B512F0
A344267EA549>I<3901F807F800FFEB1FFEEC781F9138E00F803A07F98007C02601FB00
7F150301FE805BA35BB3A5486C497EB500F1B512E0A32B267EA530>I<EB01FE90380FFF
C090383F03F09038F8007C48487F48487F4848EB0F804848EB07C0A248C7EA03E04815F0
A3007EEC01F8A300FE15FCA9007E15F8A2007F14036C15F0A26C15E06D1307000F15C06C
6CEB0F806C6CEB1F006C6C133E6C6C5B90383F03F090380FFFC0D901FEC7FC26287EA62B
>I<3901F80FF000FFEB3FFEECF01F9039F9C007C03A03FB0003E0D801FE6D7E49806F7E
49147EA2167F821780A2161F17C0A91780163FA217005E167E5E7F4B5A6D495A01FB495A
9039F9800F809026F8F03FC7FCEC7FFCEC0FE091C9FCAC487EB512F0A32A377EA530>I<
D901FC13C090380FFF0190383F03819038FC00C3D801F013634848133712074848131F48
5AA2003F140F90C7FC5AA2127E12FEA9127E127FA27EA26C7E151F6C7E0007143F6C6C13
6F6C6C13EF3900F801CF90387E070FEB1FFEEB03F890C7FCACED1FE00203B5FCA328377D
A52D>I<3903F00F8000FFEB3FE0EC70F0ECC1F83807F1833801F303A29038F601F0EC00
4001FC1300A45BB3A3487EB512F8A31D267EA522>I<90387F81803803FFE3380F807F38
1E001F00381307A2481303A200F01301A37EA200FE90C7FCEA7F8013FC383FFFC06C13F0
6C13FC00037F6C7FD8001F13801300EC1FC00040130F00C0EB07E014036C1301A47E15C0
6C13036C1480EC070000F7130E38E3C03C38C0FFF8EB3FC01B287DA622>I<1330A61370
A413F0A21201A212031207001FB5FCB6FCA2D803F0C7FCB2EC0180A912019038F80300A2
1200EB7C066D5AEB1FF8EB03F019367EB421>I<D801F8EB03F000FFEB01FFA30007EB00
0F00011403B3A51507A30000140FA26D131B017C14FC6D903873FFE090381F81E390380F
FF83903A01FE03F0002B277EA530>I<B538801FFFA33A07F80007F86C48EB03E0ED01C0
6C7E16806D130300001500A2017E1306A2137F6D5BA2EC801C011F1318A26D6C5AA2ECE0
7001071360A26D6C5AA214F901015BA26DB4C7FCA3147EA2143CA3141828267EA42D>I<
B53B87FFF80FFF80A33D0FF8003FC003FC006C486DC75A00035F701360A26C6C5E821537
6C6C4B5AED77E06D01631303017E93C7FCEDE3F0017F01C15B6D1506020113F8DA818013
0E011F150C028313FC9139C3007C1C010F151802C7137E02E6EB3E380107EC3F3002EC13
1FD903FC5C17E04A130F01015DA24A130701005DA24A1303026091C8FC39267EA43E>I<
B539C03FFF80A300039039001FF000C648EB0FC093C7FC017E130E6D130C6D6C5AECC038
010F5B6D6C5A6D6C5AECF980EB01FB6DB4C8FC147E147F80814A7EEC6FE014C7903801C3
F090380381F8EC01FCEB0600010E137E497F49800130131F01706D7ED801F880000F4A7E
D8FFFE90387FFFC0A32A257FA42D>I<B538801FFFA33A07F80007F86C48EB03E0ED01C0
6C6C1480A26D130300001500A2017E1306A2017F130E6D130CA26D6C5AA2ECC038010F13
30A26D6C5AA2ECF0E001035B14F8903801F980A214FF6D90C7FCA2147EA2143CA31418A2
5CA35CA25C1210EA7C0100FE5BA249C8FC5BEAFC0EEA701C6C5AEA1FF0EA07C028377EA4
2D>I<003FB512FEA290388000FC393E0001F8003C1303003814F00030EB07E00070130F
EC1FC000601480EC3F005C147E5CEA0001495A5C495A130F5C495A013F1303EB7F00137E
5B1201491307485A12074848130649130E485A003F141E90C7127E007EEB01FEB6FCA220
257EA426>I E /Fn 39 119 df<92260FFF80EB7FE04AB539F007FFFC020FDAFC3F7F02
3F91B712809126FFFC0014C0010301C0030113C049D9000113FC49484B4813E049485B4A
15F0495A4E6C13C0495A706E1380F27F00DC007F141C97C7FCAABBFCA526007FF0C7D87F
F0C8FCB3B2003FB5D8E03FB512F8A54B487EC745>11 D<EA07E0EA1FF8487E487E7FB5FC
1480A314C0A27EA27EEA1FFBEA07E3EA0003A2EB0780A3130F1400A2131E133E133C137C
5B485A1203485A485A485A001EC7FC120C122478C721>39 D<EA07E0EA0FF0EA3FFCA2EA
7FFEB5FCA6EA7FFEEA3FFCA2EA0FF0EA07E01010788F21>46 D<EC03C04A7E141F147FEB
01FF130F0007B5FCB6FCA313F1EAF8011200B3B3AF007FB71280A5294477C33B>49
D<EC7FF80103B57E010F14F0013F14FC9039FFC03FFF2701FE000F1380D803F86D13C049
6D13E0487ED80FFE15F06D7F028014F85AA57E4A4813F07E6C5AD801F815E0C85A17C017
804B13004B5A4B5A4B5A913803FFE00103B512804BC7FCEDFFC016F090C7EA3FFCED0FFF
6F13C06F13E017F06F13F8A217FC8117FEA2D803C015FFEA0FF0EA3FFCA2487EA2B5FCA2
17FEA3494913FC127F4915F86C485B01E015F06C484913E0D80FF84913C02707FF803F13
806C90B5EAFE00C65D013F14F0010714809026007FF8C7FC30457BC33B>51
D<EE03E04C7EA24C7EA34C7EA24C7EA24C7EA393B57EA24B80A34B8016EF03078016CF16
C7030F801683031F801601033F80153E82037E80037C7F03FC815D830201824B7F020382
5D830207824B7F020F824B7F021F8292C7FC834AB77EA24A82A302FCC86C7F4A81010184
5C840103844A810107844A81010F845C84011F8491C97ED97FC083B66C0103B71280A551
487CC75A>65 D<DC3FFE140E030FB500C0131E037F02F8133E0203B600FE13FE020FEDFF
81023FD9F80013C391B50080EB0FF74901FCC7EA03FF010701F0804901C0EC007F494915
3F4990C9121F4948160F49481607485B484916031901485B1900485B1A7E5A5C5A1A3EA2
5A91CBFC1A00A2B5FCAD7EA36E173E7EA37E806C197CA26C7F1AF86C7F19016C6D17F06C
6DEE03E06D6C16076D6CEE0FC06D6DED1F806D6DED3F006D01F015FE010101FC4A5A6DD9
FF80EB0FF8023F01F8EB7FF0020F90B612C0020393C7FCDA007F14FC030F14E09226003F
FEC8FC474979C756>67 D<B912C018FEF0FFC019F019FCD8001F902680000713FFDD007F
7F060F13E0727F06017F727F737E737E857313801BC0851BE0851BF0A21BF885A21BFCA5
1BFE85AC611BFCA41BF8A34F13F0A34F13E0A24F13C01B80614F130062F1FFFC4E5B4E5B
060F5B067F5B0507B5C7FCBA5A19F819C04EC8FC18C04F477CC65B>I<BA12FCA485D800
1F9038C00003EF003F180F180318011800A2197E197F85A285A4177CF10F80A496C7FC17
FCA316011603161F92B5FCA5EDC01F160316011600A3177CA694C9FCB0B8FCA541467CC5
4B>70 D<B8FCA5D8001F01C0C9FCB3B3A219F8A4F001F0A51803A31807A2F00FE0181FA2
183F187F18FF1703170F177FBA12C0A53D477CC647>76 D<B600E00503B6FC6F5FA26F5F
A2D8001FF3F8006F171EA2DABFFE5FA2DA9FFF5FA2028F6D5EA202876D4B5AA302836D4B
5AA202816D4B5AA202806D4B5AA26F6C151EA36F6C5DA26F6C5DA26F6D5CA26F6D495AA2
6F6D495AA36F6D495AA26F6D49C7FCA2706C131EA2706C5BA2706C5BA3706D5AA270EBC1
E0A270EBE3C0A270EBF780A37001FFC8FCA2715AA2715AA2715AA2D97FE06E5AB600F004
07B7FCA2715AA2715A68477CC671>I<B600C092B612F081818181D8001F9439007FE000
6FEE1F8081828202BF7F149F82028F7F02877F02837F02817F1480836F7F6F7F6F7F6F7F
81836F7F6F7F6F80707F8284707F707F707F707F707FA27014807113C07113E07113F071
13F8A27113FC7113FE7113FF71149F7213DFA27213FF84848484A28484858585A2858585
85D97FE082B612F01A7F1A3F1A1F74C7FC54477CC65D>I<923803FFF0037FEBFF800203
B612F0020F15FC023F9038807FFF9127FFF8000713C0010301E0010113F049496D7F4990
C8EA3FFC49486F7E49486F7E017F8449486F7F48496F7F48854A8148854A814885A24849
707EA24885A34890CA6C1380A5B519C0AE6C1A80A26E5EA26C1A00A36C6D4C5AA36C6D4B
5BA26C616C6D4B5B6E5D6C616C6D4B5B6D6C4B5B6E5D6D6D4A90C7FC010F6DECFFFC6D01
F001035B6D01FC010F5B01009026FF807F13C06E90B65A020F03FCC8FC020315F0DA007F
1480030301F0C9FC4A4979C759>I<B97E18F818FF19C019F0D8001F902680000F13FC05
017F716C7E7213807213C0841AE0A27213F0A31AF8A81AF0A34E13E0A21AC04E1380604E
1300943801FFFC050F5B92B75A19C04EC7FC18F003C0CAFCB3A9B712F8A545477CC651>
I<B812FCEFFFF018FE727E19E0D8001F902680001F13F805017F716CB4FC727F84727F86
A2727FA286A862A24E5BA2624E5B4E90C8FCF0FFFE050313F8051F5B92B712C04EC9FC18
F818FE923A80007FFF80051F7F05077F717F717F85717FA2187F85A786A51CE0F301F01A
C0A2841B037201E013E0721407B700F06D01F013C0729038FC1F807290B51200726C5B07
1F5BCD13F054487CC659>82 D<DA7FF013070107B55B011FECC01F017FECF03F90B6EAFC
7F00039039C00FFEFF4848C7B5FC49143F484880484814074980003F815B007F8183A200
FF82A37F837F7F7F01FF92C7FC6C13C014FEECFFE06C14FF16F06C15FC16FF6C16C06C82
836C82C6826D81131F6D811301D9001F15801401DA000F14C01500161F7013E082820078
8100F881A2177FA37E18C0A27E18806C16FF7F6D16006D4A5A01F8140301FE4A5A6D6C49
5A02FCEB7FF0D8FE3FB65AD8FC0F1580D8F80392C7FC48C66C13F848010313C0334979C7
42>I<003FBBFCA5DA00039038F8003FD87FF80507138001E01701498349187F90C7173F
A2007E191FA21A0F127CA400FC1AC0481907A5C894C7FCB3B3A40103B812F8A54A467CC5
53>I<B700F849B612C0A5D8001F01C0C96CC7FC1A3EB3B3AA6D187E1A7C811AFC6D6019
016D7F6D4D5A6F4B5A7F6E6CED1FC06E6C4B5A6E6C6C02FFC8FC6E01E0EB07FE020301FE
EB7FFC6E90B612F06E6C5D030F1580030102FCC9FCDB000F13C052487CC65B>I<B7D8C0
3FB600F0011FB512F0A5C66C90C8001F01E0C8380FF80072EF03E06F7015076D65846F70
150F6D70606F1A1F6D7293C7FC846F705D6D1C3E814E6D157E6D1C7C6F7114FC6D4C5FA2
6F4A6E13016D059F5E6F19036E031F6E5C190F707013076E033F5F70EB3E07067E6E130F
6EDB7C035E70181F6E03FC6E91C8FC4E7EDCF0016F5B6E4B6C153E16F86E02036F5B4E7F
04FCEF80FC6E02075F4E7FDCFE0F16C16E4B6D5C04FF17C36F011FEEE3E095C77E059F16
F76F01BE6E5C17FE1CFF6F496E5CA26F96C9FC4D80A26F496E5BA26F604D157FA26F604D
153FA26F496F5AA2047F5F94C9120FA2043E705A74487DC67B>87
D<903807FFFC017FEBFFC048B612F84815FE3A07FE001FFF6D010313C0486D6C7F6F7F16
7F83A26C90C76C7EA26C5AEA00F890C8FCA40207B5FC91B6FC1307013FEBE03F9038FFFE
00000313F04813C04890C7FC485A485A485AA2485AA5167F6C6C14FFED01EF6C6C130301
FF903807CFFF000F9026C03F8F13F86C90B5000713FC0001ECFC036C6CEBF00101039039
80007FF8362E7DAD3A>97 D<EB7FC0B5FCA512037EB3ED0FFC92387FFFC002C3B512F002
CF14FC9139DFF00FFF9126FF80037F4A486C7F02F86D7F4A6E7E4A6E7E84171F84A2170F
84A31980AA1900A34D5AA260A24D5A806E4A5A6E4A5A6E495B02BF01075B91271FE01FFE
C7FC496CB55AD9FC0314F049C6148049D91FF8C8FC39487CC742>I<91381FFFC091B512
F8010714FE011FECFF8090267FFC0013C09038FFE00148494813E0481380481300485AA2
48486D13C0123F6F1380EE3E00484891C7FCA312FFAA127FA27F123FA217F86C7E120F6D
EC01F06C6D13036C6DEB07E06C6DEB0FC06C6DEB1F80D97FFEEBFF00011FB55A010714F8
010014E0DA1FFEC7FC2D2E7CAD35>I<EF7FC093B5FCA5160382B3EC0FFC91B512810107
14E1011F14F990263FFC03B5FC9039FFF0007F4801C0131F48497F4890C77E484880A248
5AA2123FA2485AA312FFAA127FA3123F7FA2121F7F000F5D6C6C5C6C6D5B6C6D5B6C6D90
B57E90277FF807FBEBFF80011FB512F3010714C3010114039038001FF839487CC742>I<
EC1FFE49B512E0010714F8011F14FE90397FFC07FF9026FFE0011380489039C0007FC048
49EB3FE04890C713F04848141F001FED0FF85B003F16FC1607127F5B17FEA212FFA290B7
FCA317FC01F8C9FCA4127FA27F123FA2171C6C6C153E120F6D157E6C16FC6C6DEB01F86C
6DEB03F026007FF0EB1FE0D93FFEEBFFC06DB612800107ECFE00010014F8020F13802F2E
7DAD36>I<EDFFC0020F13F8027F7F49B6FC4913814948481380EB0FF849484813C0133F
14E0137F4A6C138013FF6F13006F5A163893C7FCAAB612FEA5C601E0C8FCB3B2007FEBFF
F0A52A487DC724>I<EF1F80DA7FF8EB7FE00103B53801FFF0011F14E7499138FFE7F890
26FFE01F130F4890388007FE4890380003FF48486DEB87F0A248486DEBC1C0EFC000A200
1F82A6000F5EA36C6C495BA26C6C4990C7FC6C6D485A6C9038E01FFC91B512F0485DD803
C391C8FC9038C07FF8000790CAFCA47F7F7F90B612F016FF6C16E017F86C16FE836C1780
7F0003B812C0120FD81FF8C7001F13E0D83FE0140148489138007FF0173F4848151FA56C
6CED3FE0A26C6CED7FC06D15FFD81FFC020313806CB4020F1300000301F0EBFFFCC690B6
12F0013F15C001074AC7FCD9003F13C035447DAE3B>I<EB7FC0B5FCA512037EB3923801
FFC0030F13F8033F13FE92B6FC9126C1FC077F9126C3E0037F9138C7C001DACF008002DE
7F14DC02FC815C5CA35CB3A8B6D8C07FEBFFE0A53B487CC742>I<13FC487E487E481380
4813C04813E0A66C13C06C13806C13006C5A6C5A90C7FCABEB7FC0B5FCA512037EB3B0B6
FCA518497CC820>I<EB7FC0B5FCA512037EB393387FFFF8A5933807FE0017F04C5AEE3F
C04C5A04FEC7FC4B5AED07F84B5AED1FC04B5A03FFC8FCECC1FEECC3FF02CF7F02DF7F91
B5FC828202FC7F4A6C7EECE03F4A6C7E826F7F6F7F816F7F836F7F707E163F707E707E18
8018C0B6D8807F13FFA538487CC73F>107 D<EB7FC0B5FCA512037EB3B3B3A6B61280A5
19487CC720>I<90287FC001FFC0ECFFE0B5010F01F8010713FC033F01FE011F13FF92B6
017F809126C1FC07902680FE037F9126C3E0039026C1F0017F00039026C7C0019038C3E0
006CD9CF00DAE7808002DE6D01EFC7127F02DC15EE02FC03FE814A5D4A5DA34A5DB3A8B6
D8C07F9026FFE03FB512F0A55C2E7CAD63>I<903A7FC001FFC0B5010F13F8033F13FE92
B6FC9126C1FC077F9126C3E0037F00039038C7C0016CD9CF008002DE7F14DC02FC815C5C
A35CB3A8B6D8C07FEBFFE0A53B2E7CAD42>I<EC0FFF91B512F0010714FE011F6E7E9026
3FFC037F903AFFE0007FF0480180EB1FF84890C76C7E48486E7E000F824980001F178000
3F17C04980A2007F17E0A300FF17F0AA007F17E0A46C6C4A13C0A2001F17806D5C000F17
006C6C4A5A6C6D495A6C6D495A6C6D495A903A7FFC03FFE0011FB6128001074AC7FC0100
14F0020F90C8FC342E7DAD3B>I<90397FC00FFCB590387FFFC002C3B512F002CF14FC91
39DFF01FFF9126FF80077F000349486C7F6C01F801007F4A814A6E7E717EA284171FA284
A2831980AA19005FA260A24D5AA24D5A806E4A5A6E495B6E495B6E010F5B9226E03FFEC7
FC02EFB55A02E314F002E01480DB1FF8C8FC92CAFCAFB612C0A539427CAD42>I<9039FF
803F80B5EBFFF0028313FC02877F91388FC3FF15070003D99E0F13806C13BC14B814F814
F06F1300A24A6C5AED00F893C7FCA25CB3A6B612E0A5292E7CAD31>114
D<D90FFF13E0017F13E348B6FC1207380FF801391FC0003F4848130F90C712075A15035A
A27F7F01F090C7FC13FEEBFFF86CEBFFC015F06C14FC6C14FF6C15806C15C06C15E0C615
F0133F010314F8EB001F020013FC151F0078140F00F8140715037EA26C15F8A27E6DEB07
F06D130F01F0EB1FE001FCEBFFC090B61280D8FC7FEBFE00D8F81F13F8D8E0031380262E
7CAD2F>I<EB01F0A61303A31307A3130FA2131F133FA2137FEA01FF5A000F90B512E0B7
FCA4C601F0C7FCB3A516F8A9017FEB01F014F8013FEB03E014FC90391FFE0FC06DB51280
0103140001005BEC1FF025427EC12E>I<D97FE0EC3FF0B5EC7FFFA5000315016C81B3A8
5EA35E6C5DEE0F7F017F141F6E013E7FD93FFC01FCEBFFE06DB512F8010714E001011480
9039003FFE003B2E7CAD42>I<B649B5FCA5000301E09038001FC06C6DEC0F80171F6C17
006E5C017F153E6E147E013F157C6E14FC011F5D6E13016D5DED80036D5D15C016076D5D
EDE00F6D5DEDF01F6D92C7FC6F5A027F133EEDFC7E023F137CEDFEFC021F5B15FFA26E5B
A26E5BA26E5BA26E5BA26E90C8FCA2157E153C382E7DAD3F>I E
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 255 1
255 0 bop 25 160 a Fn(13.)53 b(Reinforcemen)m(t)43 b(Learning)1522
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1522 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 628 543
a Fm([Read)29 b(Chapter)h(13])481 647 y([Exercises)g(13.1,)e(13.2,)h
(13.4])40 805 y Fl(\017)21 b Fm(Con)n(trol)29 b(learning)40
950 y Fl(\017)21 b Fm(Con)n(trol)29 b(p)r(olici)q(es)j(that)d(c)n(ho)r
(ose)g(optimal)h(actions)40 1095 y Fl(\017)21 b Fk(Q)29
b Fm(learning)40 1240 y Fl(\017)21 b Fm(Con)n(v)n(ergence)0
2748 y Fj(255)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 256 2
256 1 bop 25 160 a Fn(Con)m(trol)41 b(Learning)956 160
y
0.8666 0.03137 0.02352 setrgbcolor
 956 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(Consider)29
b(learning)i(to)e(c)n(ho)r(ose)g(actions,)h(e.g.,)40
696 y Fl(\017)21 b Fm(Rob)r(ot)30 b(learning)g(to)f(do)r(c)n(k)g(on)g
(battery)h(c)n(harger)40 841 y Fl(\017)21 b Fm(Learning)29
b(to)g(c)n(ho)r(ose)g(actions)i(to)e(optimize)h(factory)104
945 y(output)40 1090 y Fl(\017)21 b Fm(Learning)29 b(to)g(pla)n(y)h
(Bac)n(kgammon)0 1248 y(Note)f(sev)n(eral)h(problem)e(c)n
(haracteristics:)40 1393 y Fl(\017)21 b Fm(Dela)n(y)n(ed)29
b(rew)n(ard)40 1539 y Fl(\017)21 b Fm(Opp)r(ortunit)n(y)30
b(for)f(activ)n(e)h(exploration)40 1684 y Fl(\017)21
b Fm(P)n(ossibilit)n(y)32 b(that)d(state)h(only)g(partially)i(observ)-5
b(able)40 1829 y Fl(\017)21 b Fm(P)n(ossible)30 b(need)e(to)i(learn)f
(m)n(ultiple)h(tasks)g(with)g(same)104 1933 y(sensors/e\013ectors)0
2748 y Fj(256)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 257 3
257 2 bop 25 160 a Fh(One)35 b(Example:)46 b(TD-Gammon)1348
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1348 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 690 543
a Fm([T)-7 b(esauro,)28 b(1995])0 697 y(Learn)g(to)i(pla)n(y)f(Bac)n
(kgammon)0 850 y(Immediate)f(rew)n(ard)40 995 y Fl(\017)21
b Fm(+100)29 b(if)g(win)40 1141 y Fl(\017)21 b Fm(-100)28
b(if)i(lose)40 1286 y Fl(\017)21 b Fm(0)29 b(for)f(all)j(other)e
(states)0 1481 y(T)-7 b(rained)29 b(b)n(y)g(pla)n(ying)h(1.5)f(million)
i(games)d(against)i(itself)0 1635 y(No)n(w)e(appro)n(ximately)i(equal)g
(to)g(b)r(est)f(h)n(uman)e(pla)n(y)n(er)0 2748 y Fj(257)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n
(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 258 4
258 3 bop 25 160 a Fh(Reinforcemen)m(t)35 b(Learning)g(Problem)1556
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1556 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 73 478
a
 28417720 29554428 11380244 18353111 28023029 35719495 startTexFig
 73 478 a
%%BeginDocument: ../bookps/fig13-1.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 215 534 ] concat
%I 4
55 73
55 142
264 142
264 73
4 Poly
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 356 647 ] concat
%I
[
(Agent)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Rect
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 0 0 1 215 524 ] concat
%I
5 3 314 33 Rect
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 333 547.5 ] concat
%I
[
(Environment)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -2 0 ] concat

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 215 524 ] concat
%I
55 33 85 83 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 215 524 ] concat
%I
75 33 105 83 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 215 524 ] concat
%I
234 83 264 33 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 250 586 ] concat
%I
[
(State)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 310 586 ] concat
%I
[
(Reward)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
/Times-Roman 12 SetF
%I t
[ 1 0 0 1 469 586 ] concat
%I
[
(Action)
] Text
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 268 375 ] concat
%I
[
(r  + )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-symbol-*-*-*-*-14-*-*-*-*-*-*-*
/Symbol 14 SetF
%I t
[ 1 0 0 1 324 375 ] concat
%I
[
(g)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-symbol-*-*-*-*-14-*-*-*-*-*-*-*
/Symbol 14 SetF
%I t
[ 1 0 0 1 292 375 ] concat
%I
[
(g)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 301 375 ] concat
%I
[
(r  + )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 334 375 ] concat
%I
[
(  r)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 345 375 ] concat
%I
[
(  + ...  , )
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 391 375 ] concat
%I
[
(where)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-symbol-*-*-*-*-14-*-*-*-*-*-*-*
/Symbol 14 SetF
%I t
[ 1 0 0 1 454 375 ] concat
%I
[
(g)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 464 375 ] concat
%I
[
(<1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 272 366 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 344 366 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 333 381 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 304 366 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 247 404 ] concat
%I
[
(Goal: Learn to choose actions that maximize)
] Text
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.825904 -0.733637 0.891652 0.679541 173.377 468.941 ] concat
%I
45 40 85 83 Line
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -85.1335 134.547 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 316 331 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 310 337 ] concat
%I
[
(s)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.878176 -0.733637 0.948085 0.679541 265.001 468.941 ] concat
%I
45 40 85 83 Line
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -151.134 166.547 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 483 299 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 477 305 ] concat
%I
[
(s)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.763177 -0.733637 0.823931 0.679541 374.679 468.941 ] concat
%I
45 40 85 83 Line
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 95.8665 190.547 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 337 275 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 331 281 ] concat
%I
[
(s)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -14.8665 -19 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -97.2671 165 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 364 331 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 356 337 ] concat
%I
[
(a)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -161.267 197 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 531 299 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 523 305 ] concat
%I
[
(a)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 83.7329 221 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 385 275 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 377 281 ] concat
%I
[
(a)
] Text
End

End %I eop

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -5 24 ] concat

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -98.1335 101 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 397 331 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 392 337 ] concat
%I
[
(r)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -166.134 133 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 564 299 ] concat
%I
[
(1)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 559 305 ] concat
%I
[
(r)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 69.8665 157 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 418 275 ] concat
%I
[
(2)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 413 281 ] concat
%I
[
(r)
] Text
End

End %I eop

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-140-*
/Times-Roman 14 SetF
%I t
[ 1 0 0 1 515.134 468.547 ] concat
%I
[
(...)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -6 76.5 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 441.5 298.5 ] concat
%I
[
(  <)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 362.5 176.5 ] concat
%I
173 226 189 219 Line
End

End %I eop

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-i-*-140-*
/Times-Italic 14 SetF
%I t
[ 1 0 0 1 431.5 375 ] concat
%I
[
(0)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 0 2748 a Fj(258)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 259 5
259 4 bop 25 170 a Fn(Mark)m(o)m(v)38 b(Decision)k(Pro)s(cesses)1473
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1473 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 63 x
Fm(Assume)40 683 y Fl(\017)21 b Fm(\014nite)30 b(set)f(of)g(states)h
Fk(S)40 828 y Fl(\017)21 b Fm(set)29 b(of)g(actions)h
Fk(A)40 973 y Fl(\017)21 b Fm(at)29 b(eac)n(h)g(discrete)h(time)f(agen)
n(t)g(observ)n(es)g(state)h Fk(s)1739 986 y Fg(t)1787
973 y Fl(2)24 b Fk(S)104 1077 y Fm(and)k(c)n(ho)r(oses)h(action)i
Fk(a)882 1090 y Fg(t)930 1077 y Fl(2)24 b Fk(A)40 1222
y Fl(\017)d Fm(then)29 b(receiv)n(es)h(immediate)f(rew)n(ard)f
Fk(r)1361 1235 y Fg(t)40 1367 y Fl(\017)21 b Fm(and)28
b(state)i(c)n(hanges)f(to)g Fk(s)946 1380 y Fg(t)p Ff(+1)40
1513 y Fl(\017)21 b Fm(Mark)n(o)n(v)28 b(assumption:)38
b Fk(s)946 1526 y Fg(t)p Ff(+1)1070 1513 y Fm(=)24 b
Fk(\016)s Fm(\()p Fk(s)1275 1526 y Fg(t)1300 1513 y Fk(;)15
b(a)1384 1526 y Fg(t)1408 1513 y Fm(\))29 b(and)104 1617
y Fk(r)143 1629 y Fg(t)190 1617 y Fm(=)24 b Fk(r)r Fm(\()p
Fk(s)395 1629 y Fg(t)420 1617 y Fk(;)14 b(a)503 1629
y Fg(t)527 1617 y Fm(\))125 1762 y Fe({)21 b Fm(i.e.,)30
b Fk(r)397 1775 y Fg(t)449 1762 y Fm(and)e Fk(s)656 1775
y Fg(t)p Ff(+1)785 1762 y Fm(dep)r(end)h(only)h(on)f
Fd(curr)l(ent)f Fm(state)195 1866 y(and)h(action)125
1990 y Fe({)21 b Fm(functions)30 b Fk(\016)i Fm(and)d
Fk(r)i Fm(ma)n(y)c(b)r(e)j(nondeterministic)125 2115
y Fe({)21 b Fm(functions)30 b Fk(\016)i Fm(and)d Fk(r)i
Fm(not)e(necessarily)i(kno)n(wn)e(to)195 2218 y(agen)n(t)0
2748 y Fj(259)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 260 6
260 5 bop 25 160 a Fn(Agen)m(t's)40 b(Learning)h(T)-10
b(ask)1233 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1233 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0
474 a 64 x Fm(Execute)30 b(actions)g(in)g(en)n(vironmen)n(t,)e(observ)n
(e)h(results,)0 642 y(and)40 787 y Fl(\017)21 b Fm(learn)29
b(action)i(p)r(olicy)g Fk(\031)c Fm(:)d Fk(S)29 b Fl(!)24
b Fk(A)k Fm(that)h(maximizes)524 941 y Fk(E)5 b Fm([)p
Fk(r)656 954 y Fg(t)698 941 y Fm(+)19 b Fk(\015)5 b(r)873
954 y Fg(t)p Ff(+1)991 941 y Fm(+)19 b Fk(\015)1127 905
y Ff(2)1159 941 y Fk(r)1198 954 y Fg(t)p Ff(+2)1317 941
y Fm(+)g Fk(:)14 b(:)g(:)p Fm(])104 1094 y(from)27 b(an)n(y)i(starting)
h(state)g(in)f Fk(S)40 1240 y Fl(\017)21 b Fm(here)29
b(0)24 b Fl(\024)f Fk(\015)29 b(<)24 b Fm(1)k(is)i(the)f(discoun)n(t)h
(factor)f(for)g(future)104 1344 y(rew)n(ards)0 1539 y(Note)g(something)
g(new:)40 1684 y Fl(\017)21 b Fm(T)-7 b(arget)29 b(function)h(is)g
Fk(\031)d Fm(:)d Fk(S)k Fl(!)c Fk(A)40 1829 y Fl(\017)d
Fm(but)29 b(w)n(e)f(ha)n(v)n(e)h(no)f(training)j(examples)e(of)g(form)f
Fl(h)p Fk(s;)15 b(a)p Fl(i)40 1974 y(\017)21 b Fm(training)30
b(examples)f(are)g(of)g(form)f Fl(hh)p Fk(s;)15 b(a)p
Fl(i)p Fk(;)h(r)r Fl(i)0 2748 y Fj(260)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p
Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 261 7
261 6 bop 25 170 a Fh(V)-9 b(alue)36 b(F)-9 b(unction)744
170 y
0.8666 0.03137 0.02352 setrgbcolor
 744 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(T)i(o)29
b(b)r(egin,)h(consider)f(deterministic)i(w)n(orlds...)0
692 y(F)-7 b(or)28 b(eac)n(h)h(p)r(ossible)i(p)r(olicy)h
Fk(\031)f Fm(the)f(agen)n(t)f(migh)n(t)f(adopt,)0 796
y(w)n(e)h(can)g(de\014ne)f(an)h(ev)-5 b(aluation)32 b(function)e(o)n(v)
n(er)e(states)391 1053 y Fk(V)461 1022 y Fg(\031)499
1053 y Fm(\()p Fk(s)p Fm(\))43 b Fl(\021)24 b Fk(r)778
1066 y Fg(t)820 1053 y Fm(+)19 b Fk(\015)5 b(r)995 1066
y Fg(t)p Ff(+1)1114 1053 y Fm(+)19 b Fk(\015)1250 1017
y Ff(2)1281 1053 y Fk(r)1320 1066 y Fg(t)p Ff(+2)1439
1053 y Fm(+)g Fk(:::)648 1184 y Fl(\021)757 1121 y Fc(1)757
1133 y Fb(X)739 1242 y Fg(i)p Ff(=0)850 1184 y Fk(\015)900
1148 y Fg(i)922 1184 y Fk(r)961 1197 y Fg(t)p Ff(+)p
Fg(i)0 1360 y Fm(where)29 b Fk(r)288 1373 y Fg(t)311
1360 y Fk(;)15 b(r)389 1373 y Fg(t)p Ff(+1)489 1360 y
Fk(;)f(:)g(:)g(:)29 b Fm(are)g(generated)g(b)n(y)g(follo)n(wing)i(p)r
(olicy)0 1464 y Fk(\031)h Fm(starting)e(at)f(state)h
Fk(s)0 1617 y Fm(Restated,)g(the)g(task)f(is)h(to)f(learn)g(the)h
(optimal)f(p)r(olicy)j Fk(\031)1894 1586 y Fc(\003)523
1771 y Fk(\031)575 1735 y Fc(\003)631 1771 y Fl(\021)24
b Fm(argmax)843 1820 y Fg(\031)1016 1771 y Fk(V)1085
1735 y Fg(\031)1124 1771 y Fm(\()p Fk(s)p Fm(\))p Fk(;)15
b Fm(\()p Fl(8)p Fk(s)p Fm(\))0 2748 y Fj(261)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p
Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 262 8
262 7 bop 540 103 a
 14208860 9519932 328908 263127 8551628 5854576 startTexFig
 540 103 a
%%BeginDocument: ../bookps/rl-grid-r.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.631579 7.5 -77.0789 ] concat
%I
274 250 17 28 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 90.5 -102.5 ] concat
%I
83 355 95 386 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 480 151 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 151 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 431 101 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 381 101 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 381 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 201 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 381 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 251 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 480 251 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 381 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 251 480 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 130 88.25 ] concat
%I
[
(G)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 461 211 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
221 421 221 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 411 211 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
211 401 191 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 411 161 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 401 141 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 461 161 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 451 141 451 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
121 421 121 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
131 441 131 421 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
171 421 171 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
181 441 181 421 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 93.5 98 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 114.5 57 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 141 105.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 112.5 28 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 102.5 47 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 92.5 69 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 73.5 57.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 63 78 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 52 97 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 42 69.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 23.5 57.5 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 51.5 48 ] concat
%I
[
(0)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 63.5 28.5 ] concat
%I
[
(0)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.365385 3.5 17.3436 ] concat
%I
270 146 264 161 Line
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 830 801 a Fk(r)r Fm(\()p Fk(s;)16 b(a)p Fm(\))29 b(\(immediate)h(rew)n
(ard\))e(v)-5 b(alues)0 563 y
 14208860 16340186 328908 263127 8551628 9801482 startTexFig
 0 563 a
%%BeginDocument: ../bookps/rl-grid-q.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.419355 0 0 0.511765 26.4677 -22.9529 ] concat
%I
275 210 15 42 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 -6.5 -37.5 ] concat
%I
255 164 290 262 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 480 151 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 151 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 431 101 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 381 101 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 381 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 201 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 381 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 251 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 480 251 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 381 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 251 480 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 130 89.75 ] concat
%I
[
(G)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 461 211 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
221 421 221 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 411 211 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
211 401 191 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 411 161 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 401 141 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 461 161 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 451 141 451 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
121 421 121 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
131 441 131 421 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
171 421 171 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
181 441 181 421 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 94.5 97.5 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 49.5 98 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 114.5 57 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 112 28.5 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 98.5 48 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 62 78.5 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 92 68.5 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 69.5 58 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 50 48 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 61.5 28.5 ] concat
%I
[
(72)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 41.5 69 ] concat
%I
[
(72)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
/Courier 8 SetF
%I t
[ 1 0 0 1 20.5 58 ] concat
%I
[
(81)
] Text
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 5 -5 ] concat
%I
224 376 225 376 Rect
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 3.5 -4 ] concat
%I
270 143 266 160 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 150.5 105.5 ] concat
%I
[
(0)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 332 1673 a Fk(Q)p Fm(\()p Fk(s;)15 b(a)p Fm(\))30 b(v)-5
b(alues)1038 995 y
 14208860 9519932 328908 263127 8551628 5854576 startTexFig
 1038 995 a
%%BeginDocument: ../bookps/rl-grid-v.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 0.5 0 0 0.5 -7.5 -23.5 ] concat
%I
296 216 11 45 Elli
End

Begin %I Rect
none SetB %I b n
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 0.5 0 0 0.5 -6.5 -9.5 ] concat
%I
275 156 297 207 Rect
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 480 151 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 151 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 431 101 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 381 101 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 381 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 201 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 381 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 251 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 480 251 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 381 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 251 480 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 130 89.75 ] concat
%I
[
(G)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 461 211 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
221 421 221 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 411 211 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
211 401 191 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 411 161 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 401 141 401 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 461 161 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
161 451 141 451 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
121 421 121 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
131 441 131 421 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
171 421 171 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
181 441 181 421 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 76 88.25 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 126 38.75 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 79 38.75 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 29 88.25 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 29 38.75 ] concat
%I
[
(81)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.5 0 0 0.5 -7 -2.5 ] concat
%I
288 139 286 158 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-100-*
/Courier 10 SetF
%I t
[ 1 0 0 1 118.5 82.5 ] concat
%I
[
(0)
] Text
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 1245 1673 a Fk(V)1315 1642 y Fc(\003)1347 1673 y Fm(\()p
Fk(s)p Fm(\))30 b(v)-5 b(alues)540 1825 y
 14208860 9519932 328908 263127 8551628 5854576 startTexFig
 540 1825 a
%%BeginDocument: ../bookps/rl-grid-policy.ps

50 dict begin

/arrowHeight 8 def
/arrowWidth 4 def
/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
/patternGrayLevel idef
patternGrayLevel -1 eq {
/patternString idef
} if
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont findfont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 0 descender sub printSize sub printFont /Courier ne
printFont /Courier-Bold ne and { 1 add } if def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def

/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
0 0 moveto
arrowHeight neg arrowWidth 2 div lineto
arrowHeight neg arrowWidth 2 div neg lineto
closepath
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def


%I Idraw 7 Grid 8 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 480 151 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 151 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 431 101 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 381 101 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
101 381 101 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 480 201 480 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 381 151 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
151 431 251 431 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 480 251 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
251 381 201 381 Line
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
201 480 251 480 Line
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
/Times-Bold 14 SetF
%I t
[ 1 0 0 1 130 89.75 ] concat
%I
[
(G)
] Text
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 461 211 461 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
221 421 221 441 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
191 411 211 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 411 161 411 Line
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -91 -371.25 ] concat
%I
141 461 161 461 Line
End

End %I eop

showpage


end
%%EndDocument

 endTexFig
 747 2503 a Fm(One)29 b(optimal)h(p)r(olicy)0 2748 y
Fj(262)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 263 9
263 8 bop 25 170 a Fn(What)39 b(to)h(Learn)840 170 y
0.8666 0.03137 0.02352 setrgbcolor

840 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(W)-7
b(e)29 b(migh)n(t)g(try)g(to)g(ha)n(v)n(e)g(agen)n(t)g(learn)g(the)g
(ev)-5 b(aluati)q(on)0 642 y(function)30 b Fk(V)407 611
y Fg(\031)443 589 y Fa(\003)501 642 y Fm(\(whic)n(h)f(w)n(e)g(write)h
(as)f Fk(V)1302 611 y Fc(\003)1334 642 y Fm(\))0 796
y(It)g(could)h(then)f(do)g(a)f(lo)r(ok)-5 b(ahead)31
b(searc)n(h)d(to)i(c)n(ho)r(ose)f(b)r(est)0 899 y(action)h(from)e(an)n
(y)g(state)i Fk(s)f Fm(b)r(ecause)262 1070 y Fk(\031)314
1034 y Fc(\003)347 1070 y Fm(\()p Fk(s)p Fm(\))c(=)f(argmax)693
1119 y Fg(a)849 1070 y Fm([)p Fk(r)r Fm(\()p Fk(s;)15
b(a)p Fm(\))20 b(+)f Fk(\015)5 b(V)1329 1034 y Fc(\003)1361
1070 y Fm(\()p Fk(\016)s Fm(\()p Fk(s;)16 b(a)p Fm(\)\)])0
1237 y(A)28 b(problem:)40 1382 y Fl(\017)21 b Fm(This)29
b(w)n(orks)g(w)n(ell)i(if)f(agen)n(t)e(kno)n(ws)h Fk(\016)f
Fm(:)c Fk(S)f Fl(\002)c Fk(A)24 b Fl(!)g Fk(S)5 b Fm(,)104
1486 y(and)28 b Fk(r)e Fm(:)e Fk(S)g Fl(\002)19 b Fk(A)24
b Fl(!)g(<)40 1631 y(\017)d Fm(But)29 b(when)g(it)h(do)r(esn't,)f(it)h
(can't)f(c)n(ho)r(ose)g(actions)i(this)104 1735 y(w)n(a)n(y)0
2748 y Fj(263)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 264 10
264 9 bop 25 162 a Fk(Q)40 b Fn(F)-10 b(unction)626 162
y
0.8666 0.03137 0.02352 setrgbcolor
 626 162 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x Fm(De\014ne)29
b(new)g(function)h(v)n(ery)f(similar)h(to)f Fk(V)1427
507 y Fc(\003)393 709 y Fk(Q)p Fm(\()p Fk(s;)15 b(a)p
Fm(\))25 b Fl(\021)f Fk(r)r Fm(\()p Fk(s;)15 b(a)p Fm(\))20
b(+)f Fk(\015)5 b(V)1223 673 y Fc(\003)1255 709 y Fm(\()p
Fk(\016)s Fm(\()p Fk(s;)16 b(a)p Fm(\)\))0 862 y(If)29
b(agen)n(t)g(learns)h Fk(Q)p Fm(,)e(it)i(can)f(c)n(ho)r(ose)g(optimal)h
(action)g(ev)n(en)0 966 y(without)g(kno)n(wing)g Fk(\016)s
Fm(!)262 1136 y Fk(\031)314 1101 y Fc(\003)347 1136 y
Fm(\()p Fk(s)p Fm(\))25 b(=)f(argmax)693 1186 y Fg(a)849
1136 y Fm([)p Fk(r)r Fm(\()p Fk(s;)15 b(a)p Fm(\))20
b(+)f Fk(\015)5 b(V)1329 1101 y Fc(\003)1361 1136 y Fm(\()p
Fk(\016)s Fm(\()p Fk(s;)16 b(a)p Fm(\)\)])544 1393 y
Fk(\031)596 1358 y Fc(\003)628 1393 y Fm(\()p Fk(s)p
Fm(\))25 b(=)f(argmax)974 1443 y Fg(a)1144 1393 y Fk(Q)p
Fm(\()p Fk(s;)15 b(a)p Fm(\))0 1560 y Fk(Q)29 b Fm(is)g(the)h(ev)-5
b(aluation)31 b(function)g(the)e(agen)n(t)g(will)i(learn)0
2748 y Fj(264)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 265 11
265 10 bop 25 160 a Fn(T)-10 b(raining)41 b(Rule)g(to)f(Learn)h
Fk(Q)1374 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1374 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474
a 64 x Fm(Note)29 b Fk(Q)g Fm(and)f Fk(V)542 507 y Fc(\003)602
538 y Fm(closely)k(related:)586 692 y Fk(V)655 656 y
Fc(\003)687 692 y Fm(\()p Fk(s)p Fm(\))25 b(=)f(max)965
744 y Fg(a)997 726 y Fa(0)1084 692 y Fk(Q)p Fm(\()p Fk(s;)15
b(a)1309 656 y Fc(0)1328 692 y Fm(\))0 862 y(Whic)n(h)30
b(allo)n(ws)g(us)e(to)i(write)g Fk(Q)f Fm(recursiv)n(ely)i(as)245
1119 y Fk(Q)p Fm(\()p Fk(s)386 1132 y Fg(t)410 1119 y
Fk(;)15 b(a)494 1132 y Fg(t)518 1119 y Fm(\))42 b(=)f
Fk(r)r Fm(\()p Fk(s)815 1132 y Fg(t)840 1119 y Fk(;)14
b(a)923 1132 y Fg(t)947 1119 y Fm(\))20 b(+)f Fk(\015)5
b(V)1205 1083 y Fc(\003)1237 1119 y Fm(\()p Fk(\016)s
Fm(\()p Fk(s)1384 1132 y Fg(t)1409 1119 y Fk(;)15 b(a)1493
1132 y Fg(t)1517 1119 y Fm(\)\)\))593 1235 y(=)41 b Fk(r)r
Fm(\()p Fk(s)815 1248 y Fg(t)840 1235 y Fk(;)14 b(a)923
1248 y Fg(t)947 1235 y Fm(\))20 b(+)f Fk(\015)g Fm(max)1206
1287 y Fg(a)1238 1270 y Fa(0)1324 1235 y Fk(Q)p Fm(\()p
Fk(s)1465 1248 y Fg(t)p Ff(+1)1566 1235 y Fk(;)c(a)1650
1200 y Fc(0)1669 1235 y Fm(\))0 1427 y(Nice!)39 b(Let)401
1405 y(^)381 1427 y Fk(Q)29 b Fm(denote)h(learner's)f(curren)n(t)f
(appro)n(ximation)0 1530 y(to)h Fk(Q)p Fm(.)38 b(Consider)30
b(training)g(rule)456 1679 y(^)436 1701 y Fk(Q)p Fm(\()p
Fk(s;)16 b(a)p Fm(\))24 b Fl( )h Fk(r)c Fm(+)e Fk(\015)g
Fm(max)1096 1753 y Fg(a)1128 1735 y Fa(0)1234 1679 y
Fm(^)1214 1701 y Fk(Q)p Fm(\()p Fk(s)1355 1665 y Fc(0)1375
1701 y Fk(;)14 b(a)1458 1665 y Fc(0)1477 1701 y Fm(\))0
1875 y(where)29 b Fk(s)289 1844 y Fc(0)337 1875 y Fm(is)g(the)g(state)h
(resulting)h(from)c(applying)k(action)0 1979 y Fk(a)e
Fm(in)h(state)g Fk(s)0 2748 y Fj(265)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p
Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 266 12
266 11 bop 25 155 a Fk(Q)39 b Fn(Learning)i(for)e(Deterministi)q(c)j(W)
-10 b(orlds)25 279 y
0.8666 0.03137 0.02352 setrgbcolor
 25 279 a 0 414 1947 2 v 0 567 a
0 0 0 setrgbcolor

0 567 a 85 x Fm(F)j(or)28 b(eac)n(h)h Fk(s;)15 b(a)29
b Fm(initial)q(i)q(ze)j(table)e(en)n(try)1310 631 y(^)1290
652 y Fk(Q)q Fm(\()p Fk(s;)15 b(a)p Fm(\))25 b Fl( )f
Fm(0)0 806 y(Observ)n(e)29 b(curren)n(t)f(state)i Fk(s)0
960 y Fm(Do)f(forev)n(er:)40 1105 y Fl(\017)21 b Fm(Select)30
b(an)f(action)h Fk(a)g Fm(and)e(execute)i(it)40 1250
y Fl(\017)21 b Fm(Receiv)n(e)31 b(immediate)e(rew)n(ard)f
Fk(r)40 1395 y Fl(\017)21 b Fm(Observ)n(e)29 b(the)g(new)g(state)h
Fk(s)1011 1364 y Fc(0)40 1541 y Fl(\017)21 b Fm(Up)r(date)29
b(the)g(table)h(en)n(try)f(for)1150 1519 y(^)1130 1541
y Fk(Q)p Fm(\()p Fk(s;)15 b(a)p Fm(\))30 b(as)f(follo)n(ws:)508
1673 y(^)488 1694 y Fk(Q)p Fm(\()p Fk(s;)15 b(a)p Fm(\))25
b Fl( )f Fk(r)e Fm(+)d Fk(\015)g Fm(max)1148 1746 y Fg(a)1180
1729 y Fa(0)1286 1673 y Fm(^)1266 1694 y Fk(Q)p Fm(\()p
Fk(s)1407 1659 y Fc(0)1427 1694 y Fk(;)14 b(a)1510 1659
y Fc(0)1529 1694 y Fm(\))40 1890 y Fl(\017)21 b Fk(s)j
Fl( )g Fk(s)318 1858 y Fc(0)0 2748 y Fj(266)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p
Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 267 13
267 12 bop 25 169 a Fn(Up)s(dating)569 155 y Fh(^)553
169 y Fk(Q)661 169 y
0.8666 0.03137 0.02352 setrgbcolor
 661 169 a 0 324 1947 2 v 0 477 a
0 0 0 setrgbcolor

0 477 a -2 481 a
 30785863 8927894 1512980 920944 23681433 7367557 startTexFig
 -2 481 a
%%BeginDocument: ../bookps/rl-grid-trace.ps

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 54 dict def
IdrawDict begin

/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
/Encoding ISOLatin1Encoding def
currentdict end definefont
} def

/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Courier reencodeISO def
/Times-Bold reencodeISO def
/Times-Roman reencodeISO def
/Times-Italic reencodeISO def

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l b translate w h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def


/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def


%I Idraw 10 Grid 8.65655e-40 4.45893e-40 


Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.8 0 0 0.8 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
101 480 151 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 480 151 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 431 101 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
101 431 101 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 431 151 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 381 101 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
101 381 101 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 480 201 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
201 480 201 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
151 431 251 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
251 480 251 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
251 381 201 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
201 480 251 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
191 461 211 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
141 461 161 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
161 451 141 451 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -71 -341.25 ] concat
%I
181 441 181 421 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 114.5 127.5 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 112 98.5 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 50 120 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 81 108 ] concat
%I
[
(63)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 69.5 127.5 ] concat
%I
[
(72)
] Text
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 -74.2113 -341.25 ] concat
%I
201 381 151 381 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 0 15.9941 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 68.8094 19.0915 ] concat
%I
[
(initial state:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 132.789 21.1181 ] concat
%I
[
(s)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.7 0 0 0.7 136.991 11.9768 ] concat
%I
[
(1)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t u

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
101 480 151 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 480 151 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 431 101 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
101 431 101 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 431 151 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 381 101 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
101 381 101 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 480 201 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
201 480 201 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
201 381 151 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
151 431 251 431 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
251 480 251 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
251 381 201 381 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
201 480 251 480 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
191 461 211 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
141 461 161 461 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
161 451 141 451 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 0 0 1 197.985 -341.25 ] concat
%I
181 441 181 421 Line
%I 1
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 383.485 127.5 ] concat
%I
[
(100)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 338.485 128 ] concat
%I
[
(90)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 380.985 98.5 ] concat
%I
[
(81)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-bold-r-*-140-*
Times-Bold 14 SetF
%I t
[ 1 0 0 1 368.985 120 ] concat
%I
[
(R)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-courier-medium-r-*-80-*
Courier 8 SetF
%I t
[ 1 0 0 1 349.985 107.5 ] concat
%I
[
(63)
] Text
End

End %I eop

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 -2.28755 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f *-times-medium-r-*-120-*
Times-Roman 12 SetF
%I t
[ 1 0 0 1 343.973 35.0886 ] concat
%I
[
(next state:)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 399.92 37.1151 ] concat
%I
[
(s)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.7 0 0 0.7 404.372 28.4736 ] concat
%I
[
(2)
] Text
End

End %I eop

Begin %I Line
%I b 65535
1 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.5 SetP
%I t
[ 0.999631 -0 -0 0.999631 -102.962 0.999631 ] concat
%I
303 87 383 87 Line
%I 1
End

Begin %I Pict
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 1 0 0 1 2.89905 0 ] concat

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 1 0 0 1 223.947 85.0827 ] concat
%I
[
(a)
] Text
End

Begin %I Text
%I cfg Black
0 0 0 SetCFg
%I f -*-times-medium-i-normal-*-14-*-*-*-*-*-*-*
Times-Italic 14 SetF
%I t
[ 0.7 0 0 0.7 231.878 77.4202 ] concat
%I
[
(right)
] Text
End

End %I eop

End %I eop

showpage


end
%%EndDocument

 endTexFig
 231 1282 a Fm(^)212 1304 y Fk(Q)p Fm(\()p Fk(s)353 1317
y Ff(1)385 1304 y Fk(;)15 b(a)469 1317 y Fg(r)r(ig)r(ht)607
1304 y Fm(\))42 b Fl( )g Fk(r)21 b Fm(+)e Fk(\015)g Fm(max)1076
1356 y Fg(a)1108 1338 y Fa(0)1214 1282 y Fm(^)1195 1304
y Fk(Q)p Fm(\()p Fk(s)1336 1317 y Ff(2)1368 1304 y Fk(;)c(a)1452
1268 y Fc(0)1471 1304 y Fm(\))682 1441 y Fl( )42 b Fm(0)19
b(+)g(0)p Fk(:)p Fm(9)43 b(max)o Fl(f)p Fm(63)p Fk(;)15
b Fm(81)p Fk(;)f Fm(100)p Fl(g)682 1557 y( )42 b Fm(90)0
1760 y(notice)30 b(if)g(rew)n(ards)e(non-negativ)n(e,)i(then)388
1914 y(\()p Fl(8)p Fk(s;)14 b(a;)g(n)p Fm(\))794 1892
y(^)774 1914 y Fk(Q)842 1927 y Fg(n)p Ff(+1)956 1914
y Fm(\()p Fk(s;)h(a)p Fm(\))25 b Fl(\025)1282 1892 y
Fm(^)1262 1914 y Fk(Q)1330 1927 y Fg(n)1368 1914 y Fm(\()p
Fk(s;)15 b(a)p Fm(\))0 2068 y(and)366 2171 y(\()p Fl(8)p
Fk(s;)f(a;)h(n)p Fm(\))57 b(0)24 b Fl(\024)930 2150 y
Fm(^)910 2171 y Fk(Q)978 2184 y Fg(n)1016 2171 y Fm(\()p
Fk(s;)15 b(a)p Fm(\))25 b Fl(\024)f Fk(Q)p Fm(\()p Fk(s;)15
b(a)p Fm(\))0 2748 y Fj(267)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 268 14
268 13 bop 20 143 a Fm(^)0 165 y Fk(Q)29 b Fm(con)n(v)n(erges)g(to)g
Fk(Q)p Fm(.)38 b(Consider)29 b(case)h(of)f(deterministic)0
268 y(w)n(orld)g(where)g(see)g(eac)n(h)g Fl(h)p Fk(s;)15
b(a)p Fl(i)30 b Fm(visited)h(in\014nitely)h(often.)0
417 y Fd(Pr)l(o)l(of)p Fm(:)38 b(De\014ne)27 b(a)g(full)i(in)n(terv)-5
b(al)30 b(to)d(b)r(e)h(an)f(in)n(terv)-5 b(al)30 b(during)0
520 y(whic)n(h)f(eac)n(h)g Fl(h)p Fk(s;)15 b(a)p Fl(i)30
b Fm(is)f(visited.)41 b(During)29 b(eac)n(h)g(full)0
624 y(in)n(terv)-5 b(al)31 b(the)e(largest)i(error)d(in)1069
602 y(^)1049 624 y Fk(Q)h Fm(table)h(is)g(reduced)e(b)n(y)0
728 y(factor)i(of)f Fk(\015)0 876 y Fm(Let)174 854 y(^)154
876 y Fk(Q)222 889 y Fg(n)289 876 y Fm(b)r(e)g(table)h(after)g
Fk(n)e Fm(up)r(dates,)i(and)e(\001)1492 889 y Fg(n)1558
876 y Fm(b)r(e)i(the)0 980 y(maxim)n(um)c(error)i(in)733
958 y(^)713 980 y Fk(Q)781 993 y Fg(n)819 980 y Fm(;)h(that)h(is)419
1124 y(\001)491 1137 y Fg(n)553 1124 y Fm(=)24 b(max)686
1157 y Fg(s;a)818 1124 y Fl(j)862 1103 y Fm(^)842 1124
y Fk(Q)910 1137 y Fg(n)948 1124 y Fm(\()p Fk(s;)15 b(a)p
Fm(\))20 b Fl(\000)g Fk(Q)p Fm(\()p Fk(s;)15 b(a)p Fm(\))p
Fl(j)0 1343 y Fm(F)-7 b(or)28 b(an)n(y)h(table)h(en)n(try)777
1322 y(^)757 1343 y Fk(Q)825 1356 y Fg(n)863 1343 y Fm(\()p
Fk(s;)16 b(a)p Fm(\))29 b(up)r(dated)g(on)g(iteration)0
1447 y Fk(n)17 b Fm(+)h(1,)28 b(the)g(error)g(in)h(the)f(revised)h
(estimate)1507 1425 y(^)1488 1447 y Fk(Q)1556 1460 y
Fg(n)p Ff(+1)1670 1447 y Fm(\()p Fk(s;)15 b(a)p Fm(\))29
b(is)0 1592 y Fl(j)44 1570 y Fm(^)24 1592 y Fk(Q)92 1604
y Fg(n)p Ff(+1)206 1592 y Fm(\()p Fk(s;)15 b(a)p Fm(\))21
b Fl(\000)e Fk(Q)p Fm(\()p Fk(s;)c(a)p Fm(\))p Fl(j)42
b Fm(=)g Fl(j)p Fm(\()p Fk(r)21 b Fm(+)f Fk(\015)e Fm(max)1260
1643 y Fg(a)1292 1626 y Fa(0)1398 1570 y Fm(^)1378 1592
y Fk(Q)1446 1604 y Fg(n)1484 1592 y Fm(\()p Fk(s)1557
1556 y Fc(0)1576 1592 y Fk(;)c(a)1659 1556 y Fc(0)1678
1592 y Fm(\)\))993 1733 y Fl(\000)p Fm(\()p Fk(r)22 b
Fm(+)d Fk(\015)g Fm(max)1360 1785 y Fg(a)1392 1768 y
Fa(0)1478 1733 y Fk(Q)p Fm(\()p Fk(s)1619 1697 y Fc(0)1639
1733 y Fk(;)14 b(a)1722 1697 y Fc(0)1741 1733 y Fm(\)\))p
Fl(j)827 1887 y Fm(=)42 b Fk(\015)5 b Fl(j)13 b Fm(max)1080
1939 y Fg(a)1112 1922 y Fa(0)1218 1865 y Fm(^)1198 1887
y Fk(Q)1266 1900 y Fg(n)1304 1887 y Fm(\()p Fk(s)1377
1852 y Fc(0)1396 1887 y Fk(;)i(a)1480 1852 y Fc(0)1499
1887 y Fm(\))k Fl(\000)g Fm(max)1694 1939 y Fg(a)1726
1922 y Fa(0)1812 1887 y Fk(Q)p Fm(\()p Fk(s)1953 1852
y Fc(0)1972 1887 y Fk(;)14 b(a)2055 1852 y Fc(0)2075
1887 y Fm(\))p Fl(j)827 2041 y(\024)42 b Fk(\015)18 b
Fm(max)1056 2093 y Fg(a)1088 2076 y Fa(0)1174 2041 y
Fl(j)1218 2019 y Fm(^)1198 2041 y Fk(Q)1266 2054 y Fg(n)1304
2041 y Fm(\()p Fk(s)1377 2006 y Fc(0)1396 2041 y Fk(;)d(a)1480
2006 y Fc(0)1499 2041 y Fm(\))k Fl(\000)g Fk(Q)p Fm(\()p
Fk(s)1778 2006 y Fc(0)1798 2041 y Fk(;)14 b(a)1881 2006
y Fc(0)1900 2041 y Fm(\))p Fl(j)827 2195 y(\024)42 b
Fk(\015)18 b Fm(max)1019 2247 y Fg(s)1047 2230 y Fa(00)1076
2247 y Fg(;a)1125 2230 y Fa(0)1174 2195 y Fl(j)1218 2174
y Fm(^)1198 2195 y Fk(Q)1266 2208 y Fg(n)1304 2195 y
Fm(\()p Fk(s)1377 2160 y Fc(00)1413 2195 y Fk(;)c(a)1496
2160 y Fc(0)1515 2195 y Fm(\))20 b Fl(\000)f Fk(Q)p Fm(\()p
Fk(s)1795 2160 y Fc(00)1831 2195 y Fk(;)14 b(a)1914 2160
y Fc(0)1933 2195 y Fm(\))p Fl(j)0 2361 y(j)44 2339 y
Fm(^)24 2361 y Fk(Q)92 2374 y Fg(n)p Ff(+1)206 2361 y
Fm(\()p Fk(s;)h(a)p Fm(\))21 b Fl(\000)e Fk(Q)p Fm(\()p
Fk(s;)c(a)p Fm(\))p Fl(j)42 b(\024)g Fk(\015)5 b Fm(\001)1058
2374 y Fg(n)0 2748 y Fj(268)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 269 15
269 14 bop 0 143 a Fm(Note)29 b(w)n(e)g(used)f(general)i(fact)g(that)
121 296 y Fl(j)14 b Fm(max)223 329 y Fg(a)334 296 y Fk(f)376
309 y Ff(1)408 296 y Fm(\()p Fk(a)p Fm(\))20 b Fl(\000)f
Fm(max)690 329 y Fg(a)800 296 y Fk(f)842 309 y Ff(2)874
296 y Fm(\()p Fk(a)p Fm(\))p Fl(j)25 b(\024)f Fm(max)1190
329 y Fg(a)1300 296 y Fl(j)p Fk(f)1366 309 y Ff(1)1398
296 y Fm(\()p Fk(a)p Fm(\))d Fl(\000)e Fk(f)1658 309
y Ff(2)1690 296 y Fm(\()p Fk(a)p Fm(\))p Fl(j)0 2748
y Fj(269)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 270 16
270 15 bop 25 170 a Fn(Nondeterministi)q(c)43 b(Case)1247
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1247 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fm(What)30 b(if)f(rew)n(ard)g(and)f(next)i(state)g(are)0
642 y(non-deterministic?)0 796 y(W)-7 b(e)29 b(rede\014ne)g
Fk(V)5 b(;)14 b(Q)29 b Fm(b)n(y)g(taking)h(exp)r(ected)h(v)-5
b(alues)319 1053 y Fk(V)388 1022 y Fg(\031)426 1053 y
Fm(\()p Fk(s)p Fm(\))43 b Fl(\021)24 b Fk(E)5 b Fm([)p
Fk(r)798 1066 y Fg(t)840 1053 y Fm(+)19 b Fk(\015)5 b(r)1015
1066 y Fg(t)p Ff(+1)1134 1053 y Fm(+)19 b Fk(\015)1270
1017 y Ff(2)1301 1053 y Fk(r)1340 1066 y Fg(t)p Ff(+2)1459
1053 y Fm(+)g Fk(:)14 b(:)h(:)p Fm(])575 1184 y Fl(\021)24
b Fk(E)5 b Fm([)777 1121 y Fc(1)777 1133 y Fb(X)759 1242
y Fg(i)p Ff(=0)870 1184 y Fk(\015)920 1148 y Fg(i)942
1184 y Fk(r)981 1197 y Fg(t)p Ff(+)p Fg(i)1072 1184 y
Fm(])334 1450 y Fk(Q)p Fm(\()p Fk(s;)16 b(a)p Fm(\))24
b Fl(\021)g Fk(E)5 b Fm([)p Fk(r)r Fm(\()p Fk(s;)15 b(a)p
Fm(\))20 b(+)f Fk(\015)5 b(V)1257 1414 y Fc(\003)1289
1450 y Fm(\()p Fk(\016)s Fm(\()p Fk(s;)16 b(a)p Fm(\)\)])0
2748 y Fj(270)334 b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g
Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e
(Hill,)j(1997)p eop
%%Page: 271 17
271 16 bop 25 170 a Fn(Nondeterministi)q(c)43 b(Case)1247
170 y
0.8666 0.03137 0.02352 setrgbcolor
 1247 170 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 64 x
Fk(Q)29 b Fm(learning)h(generalizes)h(to)e(nondeterministic)i(w)n
(orlds)0 692 y(Alter)f(training)g(rule)g(to)20 824 y(^)0
845 y Fk(Q)68 858 y Fg(n)106 845 y Fm(\()p Fk(s;)15 b(a)p
Fm(\))25 b Fl( )f Fm(\(1)p Fl(\000)p Fk(\013)629 858
y Fg(n)668 845 y Fm(\))721 824 y(^)701 845 y Fk(Q)769
858 y Fg(n)p Fc(\000)p Ff(1)883 845 y Fm(\()p Fk(s;)16
b(a)p Fm(\)+)p Fk(\013)1196 858 y Fg(n)1235 845 y Fm([)p
Fk(r)r Fm(+max)1423 897 y Fg(a)1455 880 y Fa(0)1561 824
y Fm(^)1541 845 y Fk(Q)1609 858 y Fg(n)p Fc(\000)p Ff(1)1724
845 y Fm(\()p Fk(s)1797 810 y Fc(0)1816 845 y Fk(;)e(a)1899
810 y Fc(0)1918 845 y Fm(\)])0 1015 y(where)568 1133
y Fk(\013)623 1146 y Fg(n)685 1133 y Fm(=)1056 1075 y(1)p
781 1112 594 2 v 781 1192 a(1)19 b(+)g Fk(v)s(isits)1145
1205 y Fg(n)1183 1192 y Fm(\()p Fk(s;)c(a)p Fm(\))0 1426
y(Can)28 b(still)j(pro)n(v)n(e)c(con)n(v)n(ergence)h(of)1171
1404 y(^)1151 1426 y Fk(Q)g Fm(to)h Fk(Q)e Fm([W)-7 b(atkins)30
b(and)0 1530 y(Da)n(y)n(an,)e(1992])0 2748 y Fj(271)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n
(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 272 18
272 17 bop 25 160 a Fn(T)-10 b(emp)s(oral)41 b(Di\013erence)h(Learning)
1619 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1619 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
64 x Fk(Q)29 b Fm(learning:)40 b(reduce)28 b(discrepancy)i(b)r(et)n(w)n
(een)g(successiv)n(e)0 642 y Fk(Q)f Fm(estimates)0 796
y(One)g(step)g(time)g(di\013erence:)341 949 y Fk(Q)409
914 y Ff(\(1\))487 949 y Fm(\()p Fk(s)560 962 y Fg(t)585
949 y Fk(;)14 b(a)668 962 y Fg(t)692 949 y Fm(\))25 b
Fl(\021)f Fk(r)880 962 y Fg(t)922 949 y Fm(+)19 b Fk(\015)g
Fm(max)1136 982 y Fg(a)1266 927 y Fm(^)1247 949 y Fk(Q)p
Fm(\()p Fk(s)1388 962 y Fg(t)p Ff(+1)1489 949 y Fk(;)14
b(a)p Fm(\))0 1103 y(Wh)n(y)29 b(not)g(t)n(w)n(o)g(steps?)178
1256 y Fk(Q)246 1221 y Ff(\(2\))325 1256 y Fm(\()p Fk(s)398
1269 y Fg(t)422 1256 y Fk(;)15 b(a)506 1269 y Fg(t)530
1256 y Fm(\))24 b Fl(\021)g Fk(r)717 1269 y Fg(t)760
1256 y Fm(+)19 b Fk(\015)5 b(r)935 1269 y Fg(t)p Ff(+1)1053
1256 y Fm(+)19 b Fk(\015)1189 1221 y Ff(2)1235 1256 y
Fm(max)1299 1289 y Fg(a)1429 1235 y Fm(^)1409 1256 y
Fk(Q)p Fm(\()p Fk(s)1550 1269 y Fg(t)p Ff(+2)1651 1256
y Fk(;)c(a)p Fm(\))0 1410 y(Or)28 b Fk(n)p Fm(?)0 1564
y Fk(Q)68 1528 y Ff(\()p Fg(n)p Ff(\))153 1564 y Fm(\()p
Fk(s)226 1576 y Fg(t)250 1564 y Fk(;)14 b(a)333 1576
y Fg(t)357 1564 y Fm(\))25 b Fl(\021)f Fk(r)545 1576
y Fg(t)568 1564 y Fm(+)p Fk(\015)5 b(r)724 1576 y Fg(t)p
Ff(+1)823 1564 y Fm(+)p Fl(\001)15 b(\001)f(\001)p Fm(+)p
Fk(\015)1108 1528 y Ff(\()p Fg(n)p Fc(\000)p Ff(1\))1268
1564 y Fk(r)1307 1576 y Fg(t)p Ff(+)p Fg(n)p Fc(\000)p
Ff(1)1489 1564 y Fm(+)p Fk(\015)1606 1528 y Fg(n)1658
1564 y Fm(max)1722 1596 y Fg(a)1852 1542 y Fm(^)1832
1564 y Fk(Q)p Fm(\()p Fk(s)1973 1576 y Fg(t)p Ff(+)p
Fg(n)2080 1564 y Fk(;)h(a)p Fm(\))0 1767 y(Blend)30 b(all)g(of)f
(these:)0 1921 y Fk(Q)68 1885 y Fg(\025)105 1921 y Fm(\()p
Fk(s)178 1933 y Fg(t)203 1921 y Fk(;)14 b(a)286 1933
y Fg(t)310 1921 y Fm(\))24 b Fl(\021)g Fm(\(1)p Fl(\000)p
Fk(\025)p Fm(\))700 1838 y Fb(")724 1921 y Fk(Q)792 1885
y Ff(\(1\))870 1921 y Fm(\()p Fk(s)943 1933 y Fg(t)968
1921 y Fk(;)14 b(a)1051 1933 y Fg(t)1075 1921 y Fm(\))20
b(+)f Fk(\025Q)1332 1885 y Ff(\(2\))1411 1921 y Fm(\()p
Fk(s)1484 1933 y Fg(t)1508 1921 y Fk(;)c(a)1592 1933
y Fg(t)1616 1921 y Fm(\))k(+)h Fk(\025)1805 1885 y Ff(2)1837
1921 y Fk(Q)1905 1885 y Ff(\(3\))1983 1921 y Fm(\()p
Fk(s)2056 1933 y Fg(t)2081 1921 y Fk(;)14 b(a)2164 1933
y Fg(t)2188 1921 y Fm(\))20 b(+)f Fl(\001)14 b(\001)g(\001)2427
1838 y Fb(#)0 2748 y Fj(272)334 b(lecture)17 b(slides)f(for)f(textb)q
(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h
(McGra)o(w)e(Hill,)j(1997)p eop
%%Page: 273 19
273 18 bop 25 160 a Fn(T)-10 b(emp)s(oral)41 b(Di\013erence)h(Learning)
1619 160 y
0.8666 0.03137 0.02352 setrgbcolor
 1619 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a
154 x Fk(Q)68 592 y Fg(\025)105 628 y Fm(\()p Fk(s)178
641 y Fg(t)203 628 y Fk(;)14 b(a)286 641 y Fg(t)310 628
y Fm(\))24 b Fl(\021)g Fm(\(1)p Fl(\000)p Fk(\025)p Fm(\))700
546 y Fb(")724 628 y Fk(Q)792 592 y Ff(\(1\))870 628
y Fm(\()p Fk(s)943 641 y Fg(t)968 628 y Fk(;)14 b(a)1051
641 y Fg(t)1075 628 y Fm(\))20 b(+)f Fk(\025Q)1332 592
y Ff(\(2\))1411 628 y Fm(\()p Fk(s)1484 641 y Fg(t)1508
628 y Fk(;)c(a)1592 641 y Fg(t)1616 628 y Fm(\))k(+)h
Fk(\025)1805 592 y Ff(2)1837 628 y Fk(Q)1905 592 y Ff(\(3\))1983
628 y Fm(\()p Fk(s)2056 641 y Fg(t)2081 628 y Fk(;)14
b(a)2164 641 y Fg(t)2188 628 y Fm(\))20 b(+)f Fl(\001)14
b(\001)g(\001)2427 546 y Fb(#)0 781 y Fm(Equiv)-5 b(alen)n(t)31
b(expression:)214 935 y Fk(Q)282 899 y Fg(\025)319 935
y Fm(\()p Fk(s)392 948 y Fg(t)416 935 y Fk(;)15 b(a)500
948 y Fg(t)524 935 y Fm(\))42 b(=)24 b Fk(r)729 948 y
Fg(t)771 935 y Fm(+)19 b Fk(\015)5 b Fm([)41 b(\(1)20
b Fl(\000)f Fk(\025)p Fm(\))c(max)1316 968 y Fg(a)1446
913 y Fm(^)1427 935 y Fk(Q)p Fm(\()p Fk(s)1568 948 y
Fg(t)1592 935 y Fk(;)f(a)1675 948 y Fg(t)1700 935 y Fm(\))972
1066 y(+)p Fk(\025)29 b(Q)1186 1030 y Fg(\025)1223 1066
y Fm(\()p Fk(s)1296 1078 y Fg(t)p Ff(+1)1397 1066 y Fk(;)14
b(a)1480 1078 y Fg(t)p Ff(+1)1581 1066 y Fm(\)])0 1219
y(TD\()p Fk(\025)p Fm(\))30 b(algorithm)f(uses)g(ab)r(o)n(v)n(e)g
(training)h(rule)40 1364 y Fl(\017)21 b Fm(Sometimes)28
b(con)n(v)n(erges)g(faster)i(than)f Fk(Q)g Fm(learning)40
1510 y Fl(\017)21 b Fm(con)n(v)n(erges)29 b(for)f(learning)j
Fk(V)1021 1478 y Fc(\003)1082 1510 y Fm(for)d(an)n(y)h(0)24
b Fl(\024)g Fk(\025)g Fl(\024)g Fm(1)104 1613 y(\(Da)n(y)n(an,)k
(1992\))40 1759 y Fl(\017)21 b Fm(T)-7 b(esauro's)28
b(TD-Gammon)e(uses)i(this)i(algorithm)0 2748 y Fj(273)334
b(lecture)17 b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n
(arning)p Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Page: 274 20
274 19 bop 25 160 a Fn(Subtleties)43 b(and)c(Ongoing)j(Researc)m(h)1784
160 y
0.8666 0.03137 0.02352 setrgbcolor
 1784 160 a 0 321 1947 2 v 0 474 a
0 0 0 setrgbcolor
 0 474 a 40 614
a Fl(\017)21 b Fm(Replace)445 592 y(^)425 614 y Fk(Q)29
b Fm(table)h(with)h(neural)e(net)g(or)g(other)104 718
y(generalizer)40 863 y Fl(\017)21 b Fm(Handle)26 b(case)g(where)f
(state)i(only)g(partially)h(observ)-5 b(able)40 1008
y Fl(\017)21 b Fm(Design)29 b(optimal)h(exploration)h(strategies)40
1154 y Fl(\017)21 b Fm(Extend)29 b(to)g(con)n(tin)n(uous)g(action,)h
(state)40 1299 y Fl(\017)21 b Fm(Learn)28 b(and)h(use)669
1276 y(^)665 1299 y Fk(\016)f Fm(:)c Fk(S)f Fl(\002)d
Fk(A)j Fl(!)h Fk(S)40 1444 y Fl(\017)d Fm(Relationship)32
b(to)d(dynamic)g(programming)0 2748 y Fj(274)334 b(lecture)17
b(slides)f(for)f(textb)q(o)q(ok)g Fi(Machine)h(L)n(e)n(arning)p
Fj(,)c(T.)j(Mitc)o(hell,)h(McGra)o(w)e(Hill,)j(1997)p
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
